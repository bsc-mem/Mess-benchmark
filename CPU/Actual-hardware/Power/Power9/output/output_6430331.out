available: 6 nodes (0,8,252-255)
node 0 cpus: 0 4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76
node 0 size: 257742 MB
node 0 free: 246168 MB
node 8 cpus: 80 84 88 92 96 100 104 108 112 116 120 124 128 132 136 140 144 148 152 156
node 8 size: 261738 MB
node 8 free: 250848 MB
node 252 cpus:
node 252 size: 16128 MB
node 252 free: 16127 MB
node 253 cpus:
node 253 size: 16128 MB
node 253 free: 16127 MB
node 254 cpus:
node 254 size: 16128 MB
node 254 free: 16127 MB
node 255 cpus:
node 255 size: 16128 MB
node 255 free: 16127 MB
node distances:
node   0   8  252  253  254  255 
  0:  10  40  80  80  80  80 
  8:  40  10  80  80  80  80 
 252:  80  80  10  80  80  80 
 253:  80  80  80  10  80  80 
 254:  80  80  80  80  10  80 
 255:  80  80  80  80  80  10 
Architecture:          ppc64le
Byte Order:            Little Endian
CPU(s):                160
On-line CPU(s) list:   0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76,80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156
Off-line CPU(s) list:  1-3,5-7,9-11,13-15,17-19,21-23,25-27,29-31,33-35,37-39,41-43,45-47,49-51,53-55,57-59,61-63,65-67,69-71,73-75,77-79,81-83,85-87,89-91,93-95,97-99,101-103,105-107,109-111,113-115,117-119,121-123,125-127,129-131,133-135,137-139,141-143,145-147,149-151,153-155,157-159
Thread(s) per core:    1
Core(s) per socket:    20
Socket(s):             2
NUMA node(s):          6
Model:                 2.2 (pvr 004e 1202)
Model name:            POWER9, altivec supported
CPU max MHz:           3800.0000
CPU min MHz:           2300.0000
L1d cache:             32K
L1i cache:             32K
L2 cache:              512K
L3 cache:              10240K
NUMA node0 CPU(s):     0,4,8,12,16,20,24,28,32,36,40,44,48,52,56,60,64,68,72,76
NUMA node8 CPU(s):     80,84,88,92,96,100,104,108,112,116,120,124,128,132,136,140,144,148,152,156
NUMA node252 CPU(s):   
NUMA node253 CPU(s):   
NUMA node254 CPU(s):   
NUMA node255 CPU(s):   
  branch-instructions OR branches                    [Hardware event]
  branch-misses                                      [Hardware event]
  cache-misses                                       [Hardware event]
  cache-references                                   [Hardware event]
  cpu-cycles OR cycles                               [Hardware event]
  instructions                                       [Hardware event]
  stalled-cycles-backend OR idle-cycles-backend      [Hardware event]
  stalled-cycles-frontend OR idle-cycles-frontend    [Hardware event]
  alignment-faults                                   [Software event]
  bpf-output                                         [Software event]
  context-switches OR cs                             [Software event]
  cpu-clock                                          [Software event]
  cpu-migrations OR migrations                       [Software event]
  dummy                                              [Software event]
  emulation-faults                                   [Software event]
  major-faults                                       [Software event]
  minor-faults                                       [Software event]
  page-faults OR faults                              [Software event]
  task-clock                                         [Software event]
  L1-dcache-load-misses                              [Hardware cache event]
  L1-dcache-loads                                    [Hardware cache event]
  L1-dcache-prefetches                               [Hardware cache event]
  L1-dcache-store-misses                             [Hardware cache event]
  L1-icache-load-misses                              [Hardware cache event]
  L1-icache-loads                                    [Hardware cache event]
  L1-icache-prefetches                               [Hardware cache event]
  LLC-load-misses                                    [Hardware cache event]
  LLC-loads                                          [Hardware cache event]
  LLC-prefetches                                     [Hardware cache event]
  LLC-store-misses                                   [Hardware cache event]
  LLC-stores                                         [Hardware cache event]
  branch-load-misses                                 [Hardware cache event]
  branch-loads                                       [Hardware cache event]
  dTLB-load-misses                                   [Hardware cache event]
  iTLB-load-misses                                   [Hardware cache event]
  L1-dcache-load-misses OR cpu/L1-dcache-load-misses/ [Kernel PMU event]
  L1-dcache-loads OR cpu/L1-dcache-loads/            [Kernel PMU event]
  L1-dcache-prefetches OR cpu/L1-dcache-prefetches/  [Kernel PMU event]
  L1-dcache-store-misses OR cpu/L1-dcache-store-misses/ [Kernel PMU event]
  L1-icache-load-misses OR cpu/L1-icache-load-misses/ [Kernel PMU event]
  L1-icache-loads OR cpu/L1-icache-loads/            [Kernel PMU event]
  L1-icache-prefetches OR cpu/L1-icache-prefetches/  [Kernel PMU event]
  LLC-load-misses OR cpu/LLC-load-misses/            [Kernel PMU event]
  LLC-loads OR cpu/LLC-loads/                        [Kernel PMU event]
  LLC-prefetches OR cpu/LLC-prefetches/              [Kernel PMU event]
  LLC-store-misses OR cpu/LLC-store-misses/          [Kernel PMU event]
  LLC-stores OR cpu/LLC-stores/                      [Kernel PMU event]
  branch-instructions OR cpu/branch-instructions/    [Kernel PMU event]
  branch-load-misses OR cpu/branch-load-misses/      [Kernel PMU event]
  branch-loads OR cpu/branch-loads/                  [Kernel PMU event]
  branch-misses OR cpu/branch-misses/                [Kernel PMU event]
  cache-misses OR cpu/cache-misses/                  [Kernel PMU event]
  cache-references OR cpu/cache-references/          [Kernel PMU event]
  core_imc/CPM_0THRD_NON_IDLE_PCYC/                  [Kernel PMU event]
  core_imc/CPM_1THRD_NON_IDLE_INST/                  [Kernel PMU event]
  core_imc/CPM_1THRD_NON_IDLE_PCYC/                  [Kernel PMU event]
  core_imc/CPM_2THRD_NON_IDLE_INST/                  [Kernel PMU event]
  core_imc/CPM_2THRD_NON_IDLE_PCYC/                  [Kernel PMU event]
  core_imc/CPM_32MHZ_CYC/                            [Kernel PMU event]
  core_imc/CPM_3THRD_NON_IDLE_INST/                  [Kernel PMU event]
  core_imc/CPM_3THRD_NON_IDLE_PCYC/                  [Kernel PMU event]
  core_imc/CPM_4THRD_NON_IDLE_INST/                  [Kernel PMU event]
  core_imc/CPM_4THRD_NON_IDLE_PCYC/                  [Kernel PMU event]
  core_imc/CPM_ANY_THRD_NON_IDLE_PCYC/               [Kernel PMU event]
  core_imc/CPM_BUS_PUMP_CHIP_CORRECT_PRED/           [Kernel PMU event]
  core_imc/CPM_BUS_PUMP_GROUP_CORRECT_PRED/          [Kernel PMU event]
  core_imc/CPM_BUS_PUMP_GROUP_TOO_LARGE/             [Kernel PMU event]
  core_imc/CPM_BUS_PUMP_GROUP_TOO_SMALL/             [Kernel PMU event]
  core_imc/CPM_BUS_PUMP_NON_FABRIC_OP/               [Kernel PMU event]
  core_imc/CPM_BUS_PUMP_SYSTEM_CORRECT_PRED/         [Kernel PMU event]
  core_imc/CPM_BUS_PUMP_SYSTEM_TOO_LARGE/            [Kernel PMU event]
  core_imc/CPM_BUS_PUMP_SYSTEM_TOO_SMALL/            [Kernel PMU event]
  core_imc/CPM_CCYC/                                 [Kernel PMU event]
  core_imc/CPM_CORE_ALL_THRD_NON_IDLE_PCYC/          [Kernel PMU event]
  core_imc/CPM_CS_1PLUS_PPC_CMPL/                    [Kernel PMU event]
  core_imc/CPM_CS_1PLUS_PPC_CMPL_KERNEL/             [Kernel PMU event]
  core_imc/CPM_CS_1PLUS_PPC_CMPL_USER/               [Kernel PMU event]
  core_imc/CPM_CS_32MHZ_CYC/                         [Kernel PMU event]
  core_imc/CPM_CS_32MHZ_CYC_KERNEL/                  [Kernel PMU event]
  core_imc/CPM_CS_32MHZ_CYC_USER/                    [Kernel PMU event]
  core_imc/CPM_CS_BRU_CMPL/                          [Kernel PMU event]
  core_imc/CPM_CS_BRU_CMPL_KERNEL/                   [Kernel PMU event]
  core_imc/CPM_CS_BRU_CMPL_USER/                     [Kernel PMU event]
  core_imc/CPM_CS_BR_MPRED/                          [Kernel PMU event]
  core_imc/CPM_CS_BR_MPRED_KERNEL/                   [Kernel PMU event]
  core_imc/CPM_CS_BR_MPRED_USER/                     [Kernel PMU event]
  core_imc/CPM_CS_BR_TAKEN/                          [Kernel PMU event]
  core_imc/CPM_CS_BR_TAKEN_KERNEL/                   [Kernel PMU event]
  core_imc/CPM_CS_BR_TAKEN_USER/                     [Kernel PMU event]
  core_imc/CPM_CS_CMPLU_STALL_PCYC/                  [Kernel PMU event]
  core_imc/CPM_CS_CMPLU_STALL_PCYC_KERNEL/           [Kernel PMU event]
  core_imc/CPM_CS_CMPLU_STALL_PCYC_USER/             [Kernel PMU event]
  core_imc/CPM_CS_CORE_ICT_EMPTY_PCYC/               [Kernel PMU event]
  core_imc/CPM_CS_CORE_ICT_EMPTY_PCYC_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_CORE_ICT_EMPTY_PCYC_USER/          [Kernel PMU event]
  core_imc/CPM_CS_CORE_MODE_SMT2_CCYC/               [Kernel PMU event]
  core_imc/CPM_CS_CORE_MODE_SMT2_CCYC_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_CORE_MODE_SMT2_CCYC_USER/          [Kernel PMU event]
  core_imc/CPM_CS_CORE_MODE_SMT4_CCYC/               [Kernel PMU event]
  core_imc/CPM_CS_CORE_MODE_SMT4_CCYC_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_CORE_MODE_SMT4_CCYC_USER/          [Kernel PMU event]
  core_imc/CPM_CS_CORE_MODE_ST_CCYC/                 [Kernel PMU event]
  core_imc/CPM_CS_CORE_MODE_ST_CCYC_KERNEL/          [Kernel PMU event]
  core_imc/CPM_CS_CORE_MODE_ST_CCYC_USER/            [Kernel PMU event]
  core_imc/CPM_CS_CORE_PCYC/                         [Kernel PMU event]
  core_imc/CPM_CS_CORE_PCYC_KERNEL/                  [Kernel PMU event]
  core_imc/CPM_CS_CORE_PCYC_USER/                    [Kernel PMU event]
  core_imc/CPM_CS_DATA_TABLEWALK_PCYC/               [Kernel PMU event]
  core_imc/CPM_CS_DATA_TABLEWALK_PCYC_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_DATA_TABLEWALK_PCYC_USER/          [Kernel PMU event]
  core_imc/CPM_CS_DERAT_MISS/                        [Kernel PMU event]
  core_imc/CPM_CS_DERAT_MISS_KERNEL/                 [Kernel PMU event]
  core_imc/CPM_CS_DERAT_MISS_USER/                   [Kernel PMU event]
  core_imc/CPM_CS_DISP_HELD_PCYC/                    [Kernel PMU event]
  core_imc/CPM_CS_DISP_HELD_PCYC_KERNEL/             [Kernel PMU event]
  core_imc/CPM_CS_DISP_HELD_PCYC_USER/               [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_16G/                     [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_16G_KERNEL/              [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_16G_USER/                [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_16M/                     [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_16M_KERNEL/              [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_16M_USER/                [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_1G/                      [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_1G_KERNEL/               [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_1G_USER/                 [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_2M/                      [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_2M_KERNEL/               [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_2M_USER/                 [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_4K/                      [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_4K_KERNEL/               [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_4K_USER/                 [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_64K/                     [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_64K_KERNEL/              [Kernel PMU event]
  core_imc/CPM_CS_DTLB_MISS_64K_USER/                [Kernel PMU event]
  core_imc/CPM_CS_DTLB_RELOAD/                       [Kernel PMU event]
  core_imc/CPM_CS_DTLB_RELOAD_KERNEL/                [Kernel PMU event]
  core_imc/CPM_CS_DTLB_RELOAD_USER/                  [Kernel PMU event]
  core_imc/CPM_CS_FLOP/                              [Kernel PMU event]
  core_imc/CPM_CS_FLOP_KERNEL/                       [Kernel PMU event]
  core_imc/CPM_CS_FLOP_USER/                         [Kernel PMU event]
  core_imc/CPM_CS_FLUSH/                             [Kernel PMU event]
  core_imc/CPM_CS_FLUSH_KERNEL/                      [Kernel PMU event]
  core_imc/CPM_CS_FLUSH_USER/                        [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_IFETCH/                    [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_IFETCH_KERNEL/             [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_IFETCH_USER/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_A_IFETCH/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_A_IFETCH_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_A_IFETCH_USER/          [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_A_LDATA/                [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_A_LDATA_KERNEL/         [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_A_LDATA_USER/           [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_X_IFETCH/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_X_IFETCH_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_X_IFETCH_USER/          [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_X_LDATA/                [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_X_LDATA_KERNEL/         [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_L3_X_LDATA_USER/           [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_LDATA/                     [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_LDATA_KERNEL/              [Kernel PMU event]
  core_imc/CPM_CS_FROM_L2_LDATA_USER/                [Kernel PMU event]
  core_imc/CPM_CS_FROM_L3_IFETCH/                    [Kernel PMU event]
  core_imc/CPM_CS_FROM_L3_IFETCH_KERNEL/             [Kernel PMU event]
  core_imc/CPM_CS_FROM_L3_IFETCH_USER/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L3_LDATA/                     [Kernel PMU event]
  core_imc/CPM_CS_FROM_L3_LDATA_KERNEL/              [Kernel PMU event]
  core_imc/CPM_CS_FROM_L3_LDATA_USER/                [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_IFETCH/                    [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_IFETCH_KERNEL/             [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_IFETCH_USER/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_LDATA/                     [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_LDATA_USER/                [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_DPTEG/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_DPTEG_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_DPTEG_USER/          [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_IFETCH/              [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_IFETCH_KERNEL/       [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_IFETCH_USER/         [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_IPTEG/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_IPTEG_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_IPTEG_USER/          [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_LDATA/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_LDATA_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_A_LDATA_USER/          [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_DPTEG/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_DPTEG_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_DPTEG_USER/          [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_IFETCH/              [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_IFETCH_KERNEL/       [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_IFETCH_USER/         [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_IPTEG/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_IPTEG_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_IPTEG_USER/          [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_LDATA/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_LDATA_KERNEL/        [Kernel PMU event]
  core_imc/CPM_CS_FROM_L4_MEM_X_LDATA_USER/          [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_IFETCH/                   [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_IFETCH_KERNEL/            [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_IFETCH_USER/              [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_LDATA/                    [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_LDATA_USER/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_LOCAL/                    [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_LOCAL_KERNEL/             [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_LOCAL_USER/               [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_NON_LOCAL/                [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_NON_LOCAL_KERNEL/         [Kernel PMU event]
  core_imc/CPM_CS_FROM_MEM_NON_LOCAL_USER/           [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L2_IFETCH/            [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L2_IFETCH_KERNEL/     [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L2_IFETCH_USER/       [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L2_LDATA/             [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L2_LDATA_KERNEL/      [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L2_LDATA_USER/        [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L3_IFETCH/            [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L3_IFETCH_KERNEL/     [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L3_IFETCH_USER/       [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L3_LDATA/             [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L3_LDATA_KERNEL/      [Kernel PMU event]
  core_imc/CPM_CS_FROM_ON_CHIP_L3_LDATA_USER/        [Kernel PMU event]
  core_imc/CPM_CS_IERAT_MISS/                        [Kernel PMU event]
  core_imc/CPM_CS_IERAT_MISS_KERNEL/                 [Kernel PMU event]
  core_imc/CPM_CS_IERAT_MISS_USER/                   [Kernel PMU event]
  core_imc/CPM_CS_IFETCH_DEMAND_PCYC/                [Kernel PMU event]
  core_imc/CPM_CS_IFETCH_DEMAND_PCYC_KERNEL/         [Kernel PMU event]
  core_imc/CPM_CS_IFETCH_DEMAND_PCYC_USER/           [Kernel PMU event]
  core_imc/CPM_CS_INST/                              [Kernel PMU event]
  core_imc/CPM_CS_INST_KERNEL/                       [Kernel PMU event]
  core_imc/CPM_CS_INST_USER/                         [Kernel PMU event]
  core_imc/CPM_CS_ITLB_RELOAD/                       [Kernel PMU event]
  core_imc/CPM_CS_ITLB_RELOAD_KERNEL/                [Kernel PMU event]
  core_imc/CPM_CS_ITLB_RELOAD_USER/                  [Kernel PMU event]
  core_imc/CPM_CS_L1_MISS_IFETCH/                    [Kernel PMU event]
  core_imc/CPM_CS_L1_MISS_IFETCH_KERNEL/             [Kernel PMU event]
  core_imc/CPM_CS_L1_MISS_IFETCH_USER/               [Kernel PMU event]
  core_imc/CPM_CS_LSU_EMPTY_PCYC/                    [Kernel PMU event]
  core_imc/CPM_CS_LSU_EMPTY_PCYC_KERNEL/             [Kernel PMU event]
  core_imc/CPM_CS_LSU_EMPTY_PCYC_USER/               [Kernel PMU event]
  core_imc/CPM_CS_MISS_L1_LDATA/                     [Kernel PMU event]
  core_imc/CPM_CS_MISS_L1_LDATA_KERNEL/              [Kernel PMU event]
  core_imc/CPM_CS_MISS_L1_LDATA_USER/                [Kernel PMU event]
  core_imc/CPM_CS_PCYC/                              [Kernel PMU event]
  core_imc/CPM_CS_PCYC_KERNEL/                       [Kernel PMU event]
  core_imc/CPM_CS_PCYC_USER/                         [Kernel PMU event]
  core_imc/CPM_CS_PPC_DISP/                          [Kernel PMU event]
  core_imc/CPM_CS_PPC_DISP_KERNEL/                   [Kernel PMU event]
  core_imc/CPM_CS_PPC_DISP_USER/                     [Kernel PMU event]
  core_imc/CPM_CS_PURR/                              [Kernel PMU event]
  core_imc/CPM_CS_PURR_KERNEL/                       [Kernel PMU event]
  core_imc/CPM_CS_PURR_USER/                         [Kernel PMU event]
  core_imc/CPM_CS_SPURR/                             [Kernel PMU event]
  core_imc/CPM_CS_SPURR_KERNEL/                      [Kernel PMU event]
  core_imc/CPM_CS_SPURR_USER/                        [Kernel PMU event]
  core_imc/CPM_CS_ST_FIN/                            [Kernel PMU event]
  core_imc/CPM_CS_ST_FIN_KERNEL/                     [Kernel PMU event]
  core_imc/CPM_CS_ST_FIN_USER/                       [Kernel PMU event]
  core_imc/CPM_CS_ST_MISS_L1/                        [Kernel PMU event]
  core_imc/CPM_CS_ST_MISS_L1_KERNEL/                 [Kernel PMU event]
  core_imc/CPM_CS_ST_MISS_L1_USER/                   [Kernel PMU event]
  core_imc/CPM_EXT_INT_DOORBELL/                     [Kernel PMU event]
  core_imc/CPM_EXT_INT_EBB/                          [Kernel PMU event]
  core_imc/CPM_EXT_INT_HYP/                          [Kernel PMU event]
  core_imc/CPM_EXT_INT_OS/                           [Kernel PMU event]
  core_imc/CPM_INST/                                 [Kernel PMU event]
  core_imc/CPM_L2L3_GROUP_PB_REQ/                    [Kernel PMU event]
  core_imc/CPM_L2L3_NODAL_PB_REQ/                    [Kernel PMU event]
  core_imc/CPM_L2L3_SYS_PB_REQ/                      [Kernel PMU event]
  core_imc/CPM_LARX_FIN/                             [Kernel PMU event]
  core_imc/CPM_LWSYNC_PCYC/                          [Kernel PMU event]
  core_imc/CPM_MSR_ADJUNCT_PCYC/                     [Kernel PMU event]
  core_imc/CPM_MSR_AJUNCT_INST/                      [Kernel PMU event]
  core_imc/CPM_MSR_EXT_INT_DIS_CCYC/                 [Kernel PMU event]
  core_imc/CPM_MSR_HV_INST/                          [Kernel PMU event]
  core_imc/CPM_MSR_HV_PCYC/                          [Kernel PMU event]
  core_imc/CPM_MSR_PRIV_INST/                        [Kernel PMU event]
  core_imc/CPM_MSR_PRIV_PCYC/                        [Kernel PMU event]
  core_imc/CPM_MSR_PROB_INST/                        [Kernel PMU event]
  core_imc/CPM_MSR_PROB_PCYC/                        [Kernel PMU event]
  core_imc/CPM_MSR_TA_LIC_INST/                      [Kernel PMU event]
  core_imc/CPM_MSR_TA_LIC_PCYC/                      [Kernel PMU event]
  core_imc/CPM_MSR_TA_SYSTEM_INST/                   [Kernel PMU event]
  core_imc/CPM_MSR_TA_SYS_PCYC/                      [Kernel PMU event]
  core_imc/CPM_MSR_TA_USER_INST/                     [Kernel PMU event]
  core_imc/CPM_MSR_TA_USER_PCYC/                     [Kernel PMU event]
  core_imc/CPM_MSR_TRANSMEM_INST/                    [Kernel PMU event]
  core_imc/CPM_MSR_TRANSMEM_PCYC/                    [Kernel PMU event]
  core_imc/CPM_NON_IDLE_INST/                        [Kernel PMU event]
  core_imc/CPM_NON_IDLE_PCYC/                        [Kernel PMU event]
  core_imc/CPM_PCYC/                                 [Kernel PMU event]
  core_imc/CPM_SMT_MODE_SWITCH/                      [Kernel PMU event]
  core_imc/CPM_SMT_MODE_SWITCH_KERNEL/               [Kernel PMU event]
  core_imc/CPM_SMT_MODE_SWITCH_USER/                 [Kernel PMU event]
  core_imc/CPM_STCX_FAIL/                            [Kernel PMU event]
  core_imc/CPM_STCX_FIN/                             [Kernel PMU event]
  core_imc/CPM_SYNC_PCYC/                            [Kernel PMU event]
  core_imc/CPM_THREAD_NAP_STATE_LOSS_CCYC/           [Kernel PMU event]
  core_imc/CPM_THREAD_NAP_STATE_SAVE_CCYC/           [Kernel PMU event]
  core_imc/CPM_TLBIE/                                [Kernel PMU event]
  core_imc/CPM_TLB_RELOAD_L2/                        [Kernel PMU event]
  core_imc/CPM_TLB_RELOAD_L3/                        [Kernel PMU event]
  core_imc/CPM_TLB_RELOAD_L3_MISS/                   [Kernel PMU event]
  core_imc/CPM_TM_ABORTS/                            [Kernel PMU event]
  core_imc/CPM_TM_PASSED/                            [Kernel PMU event]
  cpu-cycles OR cpu/cpu-cycles/                      [Kernel PMU event]
  dTLB-load-misses OR cpu/dTLB-load-misses/          [Kernel PMU event]
  iTLB-load-misses OR cpu/iTLB-load-misses/          [Kernel PMU event]
  instructions OR cpu/instructions/                  [Kernel PMU event]
  nest_capp0_imc/PM_CAPP1_APC_UOP_DATA_XFER/         [Kernel PMU event]
  nest_capp0_imc/PM_CAPP1_APC_UOP_LCO/               [Kernel PMU event]
  nest_capp0_imc/PM_CAPP1_APC_UOP_SEND_PB_CMD/       [Kernel PMU event]
  nest_capp0_imc/PM_CAPP1_CYC_A/                     [Kernel PMU event]
  nest_capp0_imc/PM_CAPP1_CYC_B/                     [Kernel PMU event]
  nest_capp0_imc/PM_CAPP1_XPT_MSG_SENT_GT_16_LE_64/  [Kernel PMU event]
  nest_capp0_imc/PM_CAPP1_XPT_MSG_SENT_LE_16/        [Kernel PMU event]
  nest_capp0_imc/PM_CAPP1_XPT_MSG_SENT_TSIZE_GT_64_LE_128/ [Kernel PMU event]
  nest_capp1_imc/PM_CAPP2_APC_UOP_DATA_XFER/         [Kernel PMU event]
  nest_capp1_imc/PM_CAPP2_APC_UOP_LCO/               [Kernel PMU event]
  nest_capp1_imc/PM_CAPP2_APC_UOP_SEND_PB_CMD/       [Kernel PMU event]
  nest_capp1_imc/PM_CAPP2_CYC_A/                     [Kernel PMU event]
  nest_capp1_imc/PM_CAPP2_CYC_B/                     [Kernel PMU event]
  nest_capp1_imc/PM_CAPP2_XPT_MSG_SENT_GT_16_LE_64/  [Kernel PMU event]
  nest_capp1_imc/PM_CAPP2_XPT_MSG_SENT_LE_16/        [Kernel PMU event]
  nest_capp1_imc/PM_CAPP2_XPT_MSG_SENT_TSIZE_GT_64_LE_128/ [Kernel PMU event]
  nest_mba0_imc/PM_MBA0_CLK_CYC/                     [Kernel PMU event]
  nest_mba0_imc/PM_MBA0_READ_BYTES/                  [Kernel PMU event]
  nest_mba0_imc/PM_MBA0_WRITE_BYTES/                 [Kernel PMU event]
  nest_mba1_imc/PM_MBA1_CLK_CYC/                     [Kernel PMU event]
  nest_mba1_imc/PM_MBA1_READ_BYTES/                  [Kernel PMU event]
  nest_mba1_imc/PM_MBA1_WRITE_BYTES/                 [Kernel PMU event]
  nest_mba2_imc/PM_MBA2_CLK_CYC/                     [Kernel PMU event]
  nest_mba2_imc/PM_MBA2_READ_BYTES/                  [Kernel PMU event]
  nest_mba2_imc/PM_MBA2_WRITE_BYTES/                 [Kernel PMU event]
  nest_mba3_imc/PM_MBA3_CLK_CYC/                     [Kernel PMU event]
  nest_mba3_imc/PM_MBA3_READ_BYTES/                  [Kernel PMU event]
  nest_mba3_imc/PM_MBA3_WRITE_BYTES/                 [Kernel PMU event]
  nest_mba4_imc/PM_MBA4_CLK_CYC/                     [Kernel PMU event]
  nest_mba4_imc/PM_MBA4_READ_BYTES/                  [Kernel PMU event]
  nest_mba4_imc/PM_MBA4_WRITE_BYTES/                 [Kernel PMU event]
  nest_mba5_imc/PM_MBA5_CLK_CYC/                     [Kernel PMU event]
  nest_mba5_imc/PM_MBA5_READ_BYTES/                  [Kernel PMU event]
  nest_mba5_imc/PM_MBA5_WRITE_BYTES/                 [Kernel PMU event]
  nest_mba6_imc/PM_MBA6_CLK_CYC/                     [Kernel PMU event]
  nest_mba6_imc/PM_MBA6_READ_BYTES/                  [Kernel PMU event]
  nest_mba6_imc/PM_MBA6_WRITE_BYTES/                 [Kernel PMU event]
  nest_mba7_imc/PM_MBA7_CLK_CYC/                     [Kernel PMU event]
  nest_mba7_imc/PM_MBA7_READ_BYTES/                  [Kernel PMU event]
  nest_mba7_imc/PM_MBA7_WRITE_BYTES/                 [Kernel PMU event]
  nest_mcs01_imc/PM_MCS01_128B_RD_DISP_PORT01/       [Kernel PMU event]
  nest_mcs01_imc/PM_MCS01_128B_RD_DISP_PORT23/       [Kernel PMU event]
  nest_mcs01_imc/PM_MCS01_128B_WR_DISP_PORT01/       [Kernel PMU event]
  nest_mcs01_imc/PM_MCS01_128B_WR_DISP_PORT23/       [Kernel PMU event]
  nest_mcs01_imc/PM_MCS01_64B_RD_DISP_PORT01/        [Kernel PMU event]
  nest_mcs01_imc/PM_MCS01_64B_RD_DISP_PORT23/        [Kernel PMU event]
  nest_mcs01_imc/PM_MCS01_AMO_OP_DISP_PORT01/        [Kernel PMU event]
  nest_mcs23_imc/PM_MCS23_128B_RD_DISP_PORT01/       [Kernel PMU event]
  nest_mcs23_imc/PM_MCS23_128B_RD_DISP_PORT23/       [Kernel PMU event]
  nest_mcs23_imc/PM_MCS23_128B_WR_DISP_PORT01/       [Kernel PMU event]
  nest_mcs23_imc/PM_MCS23_128B_WR_DISP_PORT23/       [Kernel PMU event]
  nest_mcs23_imc/PM_MCS23_64B_RD_DISP_PORT01/        [Kernel PMU event]
  nest_mcs23_imc/PM_MCS23_64B_RD_DISP_PORT23/        [Kernel PMU event]
  nest_mcs23_imc/PM_MCS23_AMO_OP_DISP_PORT01/        [Kernel PMU event]
  nest_nvlink0_imc/PM_ATS_CACHE_RERUN/               [Kernel PMU event]
  nest_nvlink0_imc/PM_ATS_NO_TRANS_TCE/              [Kernel PMU event]
  nest_nvlink0_imc/PM_ATS_TCE_MISS/                  [Kernel PMU event]
  nest_nvlink0_imc/PM_ATS_TCE_TRANS_REQ/             [Kernel PMU event]
  nest_nvlink0_imc/PM_NPCQ0_CREQ_BRICK0/             [Kernel PMU event]
  nest_nvlink0_imc/PM_NPCQ0_CREQ_BRICK1/             [Kernel PMU event]
  nest_nvlink0_imc/PM_NPCQ0_DOWNGRADE_REQ_BRICK0/    [Kernel PMU event]
  nest_nvlink0_imc/PM_NPCQ0_DOWNGRADE_REQ_BRICK1/    [Kernel PMU event]
  nest_nvlink0_imc/PM_NTL0_CLK_CYC/                  [Kernel PMU event]
  nest_nvlink0_imc/PM_NTL0_RX_ANY_FLIT/              [Kernel PMU event]
  nest_nvlink0_imc/PM_NTL0_RX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink0_imc/PM_NTL0_TX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink0_imc/PM_XTS_ATR_DEMAND_CHECKOUT/       [Kernel PMU event]
  nest_nvlink0_imc/PM_XTS_ATR_DEMAND_CHECKOUT_MISS/  [Kernel PMU event]
  nest_nvlink0_imc/PM_XTS_ATSD_SENT/                 [Kernel PMU event]
  nest_nvlink0_imc/PM_XTS_ATSD_TLBI_RCV/             [Kernel PMU event]
  nest_nvlink1_imc/PM_ATS_CACHE_RERUN/               [Kernel PMU event]
  nest_nvlink1_imc/PM_ATS_NO_TRANS_TCE/              [Kernel PMU event]
  nest_nvlink1_imc/PM_ATS_TCE_MISS/                  [Kernel PMU event]
  nest_nvlink1_imc/PM_ATS_TCE_TRANS_REQ/             [Kernel PMU event]
  nest_nvlink1_imc/PM_NPCQ0_CREQ_BRICK0/             [Kernel PMU event]
  nest_nvlink1_imc/PM_NPCQ0_CREQ_BRICK1/             [Kernel PMU event]
  nest_nvlink1_imc/PM_NPCQ0_DOWNGRADE_REQ_BRICK0/    [Kernel PMU event]
  nest_nvlink1_imc/PM_NPCQ0_DOWNGRADE_REQ_BRICK1/    [Kernel PMU event]
  nest_nvlink1_imc/PM_NTL1_CLK_CYC/                  [Kernel PMU event]
  nest_nvlink1_imc/PM_NTL1_RX_ANY_FLIT/              [Kernel PMU event]
  nest_nvlink1_imc/PM_NTL1_RX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink1_imc/PM_NTL1_TX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink1_imc/PM_XTS_ATR_DEMAND_CHECKOUT/       [Kernel PMU event]
  nest_nvlink1_imc/PM_XTS_ATR_DEMAND_CHECKOUT_MISS/  [Kernel PMU event]
  nest_nvlink1_imc/PM_XTS_ATSD_SENT/                 [Kernel PMU event]
  nest_nvlink1_imc/PM_XTS_ATSD_TLBI_RCV/             [Kernel PMU event]
  nest_nvlink2_imc/PM_ATS_CACHE_RERUN/               [Kernel PMU event]
  nest_nvlink2_imc/PM_ATS_NO_TRANS_TCE/              [Kernel PMU event]
  nest_nvlink2_imc/PM_ATS_TCE_MISS/                  [Kernel PMU event]
  nest_nvlink2_imc/PM_ATS_TCE_TRANS_REQ/             [Kernel PMU event]
  nest_nvlink2_imc/PM_NPCQ1_CREQ_BRICK0/             [Kernel PMU event]
  nest_nvlink2_imc/PM_NPCQ1_CREQ_BRICK1/             [Kernel PMU event]
  nest_nvlink2_imc/PM_NPCQ1_DOWNGRADE_REQ_BRICK0/    [Kernel PMU event]
  nest_nvlink2_imc/PM_NPCQ1_DOWNGRADE_REQ_BRICK1/    [Kernel PMU event]
  nest_nvlink2_imc/PM_NTL2_CLK_CYC/                  [Kernel PMU event]
  nest_nvlink2_imc/PM_NTL2_RX_ANY_FLIT/              [Kernel PMU event]
  nest_nvlink2_imc/PM_NTL2_RX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink2_imc/PM_NTL2_TX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink2_imc/PM_XTS_ATR_DEMAND_CHECKOUT/       [Kernel PMU event]
  nest_nvlink2_imc/PM_XTS_ATR_DEMAND_CHECKOUT_MISS/  [Kernel PMU event]
  nest_nvlink2_imc/PM_XTS_ATSD_SENT/                 [Kernel PMU event]
  nest_nvlink2_imc/PM_XTS_ATSD_TLBI_RCV/             [Kernel PMU event]
  nest_nvlink3_imc/PM_ATS_CACHE_RERUN/               [Kernel PMU event]
  nest_nvlink3_imc/PM_ATS_NO_TRANS_TCE/              [Kernel PMU event]
  nest_nvlink3_imc/PM_ATS_TCE_MISS/                  [Kernel PMU event]
  nest_nvlink3_imc/PM_ATS_TCE_TRANS_REQ/             [Kernel PMU event]
  nest_nvlink3_imc/PM_NPCQ1_CREQ_BRICK0/             [Kernel PMU event]
  nest_nvlink3_imc/PM_NPCQ1_CREQ_BRICK1/             [Kernel PMU event]
  nest_nvlink3_imc/PM_NPCQ1_DOWNGRADE_REQ_BRICK0/    [Kernel PMU event]
  nest_nvlink3_imc/PM_NPCQ1_DOWNGRADE_REQ_BRICK1/    [Kernel PMU event]
  nest_nvlink3_imc/PM_NTL3_CLK_CYC/                  [Kernel PMU event]
  nest_nvlink3_imc/PM_NTL3_RX_ANY_FLIT/              [Kernel PMU event]
  nest_nvlink3_imc/PM_NTL3_RX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink3_imc/PM_NTL3_TX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink3_imc/PM_XTS_ATR_DEMAND_CHECKOUT/       [Kernel PMU event]
  nest_nvlink3_imc/PM_XTS_ATR_DEMAND_CHECKOUT_MISS/  [Kernel PMU event]
  nest_nvlink3_imc/PM_XTS_ATSD_SENT/                 [Kernel PMU event]
  nest_nvlink3_imc/PM_XTS_ATSD_TLBI_RCV/             [Kernel PMU event]
  nest_nvlink4_imc/PM_ATS_CACHE_RERUN/               [Kernel PMU event]
  nest_nvlink4_imc/PM_ATS_NO_TRANS_TCE/              [Kernel PMU event]
  nest_nvlink4_imc/PM_ATS_TCE_MISS/                  [Kernel PMU event]
  nest_nvlink4_imc/PM_ATS_TCE_TRANS_REQ/             [Kernel PMU event]
  nest_nvlink4_imc/PM_NPCQ2_CREQ_BRICK0/             [Kernel PMU event]
  nest_nvlink4_imc/PM_NPCQ2_CREQ_BRICK1/             [Kernel PMU event]
  nest_nvlink4_imc/PM_NPCQ2_DOWNGRADE_REQ_BRICK0/    [Kernel PMU event]
  nest_nvlink4_imc/PM_NPCQ2_DOWNGRADE_REQ_BRICK1/    [Kernel PMU event]
  nest_nvlink4_imc/PM_NTL4_CLK_CYC/                  [Kernel PMU event]
  nest_nvlink4_imc/PM_NTL4_RX_ANY_FLIT/              [Kernel PMU event]
  nest_nvlink4_imc/PM_NTL4_RX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink4_imc/PM_NTL4_TX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink4_imc/PM_XTS_ATR_DEMAND_CHECKOUT/       [Kernel PMU event]
  nest_nvlink4_imc/PM_XTS_ATR_DEMAND_CHECKOUT_MISS/  [Kernel PMU event]
  nest_nvlink4_imc/PM_XTS_ATSD_SENT/                 [Kernel PMU event]
  nest_nvlink4_imc/PM_XTS_ATSD_TLBI_RCV/             [Kernel PMU event]
  nest_nvlink5_imc/PM_ATS_CACHE_RERUN/               [Kernel PMU event]
  nest_nvlink5_imc/PM_ATS_NO_TRANS_TCE/              [Kernel PMU event]
  nest_nvlink5_imc/PM_ATS_TCE_MISS/                  [Kernel PMU event]
  nest_nvlink5_imc/PM_ATS_TCE_TRANS_REQ/             [Kernel PMU event]
  nest_nvlink5_imc/PM_NPCQ2_CREQ_BRICK0/             [Kernel PMU event]
  nest_nvlink5_imc/PM_NPCQ2_CREQ_BRICK1/             [Kernel PMU event]
  nest_nvlink5_imc/PM_NPCQ2_DOWNGRADE_REQ_BRICK0/    [Kernel PMU event]
  nest_nvlink5_imc/PM_NPCQ2_DOWNGRADE_REQ_BRICK1/    [Kernel PMU event]
  nest_nvlink5_imc/PM_NTL5_CLK_CYC/                  [Kernel PMU event]
  nest_nvlink5_imc/PM_NTL5_RX_ANY_FLIT/              [Kernel PMU event]
  nest_nvlink5_imc/PM_NTL5_RX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink5_imc/PM_NTL5_TX_DATA_FLIT/             [Kernel PMU event]
  nest_nvlink5_imc/PM_XTS_ATR_DEMAND_CHECKOUT/       [Kernel PMU event]
  nest_nvlink5_imc/PM_XTS_ATR_DEMAND_CHECKOUT_MISS/  [Kernel PMU event]
  nest_nvlink5_imc/PM_XTS_ATSD_SENT/                 [Kernel PMU event]
  nest_nvlink5_imc/PM_XTS_ATSD_TLBI_RCV/             [Kernel PMU event]
  nest_nx_imc/PM_NX_DMA_STALLED/                     [Kernel PMU event]
  nest_nx_imc/PM_NX_ERAT_LOOKUP/                     [Kernel PMU event]
  nest_nx_imc/PM_NX_ERAT_MISS/                       [Kernel PMU event]
  nest_nx_imc/PM_NX_ERAT_STALLED_CICO_BUFFERS/       [Kernel PMU event]
  nest_nx_imc/PM_NX_IDLE_CH0/                        [Kernel PMU event]
  nest_nx_imc/PM_NX_IDLE_CH2/                        [Kernel PMU event]
  nest_nx_imc/PM_NX_IDLE_CH4/                        [Kernel PMU event]
  nest_nx_imc/PM_NX_STALL_IN_CH4/                    [Kernel PMU event]
  nest_phb0_imc/PM_PHB0_CYC/                         [Kernel PMU event]
  nest_phb0_imc/PM_PHB0_DMA_RD_FROM_PCIE/            [Kernel PMU event]
  nest_phb0_imc/PM_PHB0_DMA_WR_FROM_PCIE/            [Kernel PMU event]
  nest_phb0_imc/PM_PHB0_LD_RESP_FROM_PCIE/           [Kernel PMU event]
  nest_phb1_imc/PM_PHB1_CYC/                         [Kernel PMU event]
  nest_phb1_imc/PM_PHB1_DMA_RD_FROM_PCIE/            [Kernel PMU event]
  nest_phb1_imc/PM_PHB1_DMA_WR_FROM_PCIE/            [Kernel PMU event]
  nest_phb1_imc/PM_PHB1_LD_RESP_FROM_PCIE/           [Kernel PMU event]
  nest_phb2_imc/PM_PHB2_CYC/                         [Kernel PMU event]
  nest_phb2_imc/PM_PHB2_DMA_RD_FROM_PCIE/            [Kernel PMU event]
  nest_phb2_imc/PM_PHB2_DMA_WR_FROM_PCIE/            [Kernel PMU event]
  nest_phb2_imc/PM_PHB2_LD_RESP_FROM_PCIE/           [Kernel PMU event]
  nest_phb3_imc/PM_PHB3_CYC/                         [Kernel PMU event]
  nest_phb3_imc/PM_PHB3_DMA_RD_FROM_PCIE/            [Kernel PMU event]
  nest_phb3_imc/PM_PHB3_DMA_WR_FROM_PCIE/            [Kernel PMU event]
  nest_phb3_imc/PM_PHB3_LD_RESP_FROM_PCIE/           [Kernel PMU event]
  nest_phb4_imc/PM_PHB4_CYC/                         [Kernel PMU event]
  nest_phb4_imc/PM_PHB4_DMA_RD_FROM_PCIE/            [Kernel PMU event]
  nest_phb4_imc/PM_PHB4_DMA_WR_FROM_PCIE/            [Kernel PMU event]
  nest_phb4_imc/PM_PHB4_LD_RESP_FROM_PCIE/           [Kernel PMU event]
  nest_phb5_imc/PM_PHB5_CYC/                         [Kernel PMU event]
  nest_phb5_imc/PM_PHB5_DMA_RD_FROM_PCIE/            [Kernel PMU event]
  nest_phb5_imc/PM_PHB5_DMA_WR_FROM_PCIE/            [Kernel PMU event]
  nest_phb5_imc/PM_PHB5_LD_RESP_FROM_PCIE/           [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_CYC/                      [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_CYC2/                     [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_EVENT_GROUP_PUMP/         [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_EVENT_LNS_PUMP/           [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_EVENT_RNS_PUMP/           [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_EVENT_RTY_GROUP_PUMP/     [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_EVENT_RTY_LNS_PUMP/       [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_EVENT_RTY_RNS_PUMP/       [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_EVENT_RTY_VG_PUMP/        [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_EVENT_VG_PUMP/            [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_EXT_DATA_XFER/            [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_GROUP_PUMP_P01/           [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_INT_DATA_XFER/            [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_LNS_PUMP_P01/             [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_NNS_PUMP/                 [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_RNS_PUMP_P01/             [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_RTY_NNS_PUMP_P01/         [Kernel PMU event]
  nest_powerbus0_imc/PM_PB_VG_PUMP_P01/              [Kernel PMU event]
  nest_xlink0_imc/PM_XLINK0_OUT_EVEN_ANY_RCMD/       [Kernel PMU event]
  nest_xlink0_imc/PM_XLINK0_OUT_EVEN_CYC/            [Kernel PMU event]
  nest_xlink0_imc/PM_XLINK0_OUT_EVEN_DATA_COUNT/     [Kernel PMU event]
  nest_xlink0_imc/PM_XLINK0_OUT_EVEN_TOTAL_UTIL/     [Kernel PMU event]
  nest_xlink0_imc/PM_XLINK0_OUT_ODD_ANY_RCMD/        [Kernel PMU event]
  nest_xlink0_imc/PM_XLINK0_OUT_ODD_CYC/             [Kernel PMU event]
  nest_xlink0_imc/PM_XLINK0_OUT_ODD_DATA_COUNT/      [Kernel PMU event]
  nest_xlink0_imc/PM_XLINK0_OUT_ODD_TOTAL_UTIL/      [Kernel PMU event]
  nest_xlink1_imc/PM_XLINK1_OUT_EVEN_ANY_RCMD/       [Kernel PMU event]
  nest_xlink1_imc/PM_XLINK1_OUT_EVEN_CYC/            [Kernel PMU event]
  nest_xlink1_imc/PM_XLINK1_OUT_EVEN_DATA_COUNT/     [Kernel PMU event]
  nest_xlink1_imc/PM_XLINK1_OUT_EVEN_TOTAL_UTIL/     [Kernel PMU event]
  nest_xlink1_imc/PM_XLINK1_OUT_ODD_ANY_RCMD/        [Kernel PMU event]
  nest_xlink1_imc/PM_XLINK1_OUT_ODD_CYC/             [Kernel PMU event]
  nest_xlink1_imc/PM_XLINK1_OUT_ODD_DATA_COUNT/      [Kernel PMU event]
  nest_xlink1_imc/PM_XLINK1_OUT_ODD_TOTAL_UTIL/      [Kernel PMU event]
  nest_xlink2_imc/PM_XLINK2_OUT_EVEN_ANY_RCMD/       [Kernel PMU event]
  nest_xlink2_imc/PM_XLINK2_OUT_EVEN_CYC/            [Kernel PMU event]
  nest_xlink2_imc/PM_XLINK2_OUT_EVEN_DATA_COUNT/     [Kernel PMU event]
  nest_xlink2_imc/PM_XLINK2_OUT_EVEN_TOTAL_UTIL/     [Kernel PMU event]
  nest_xlink2_imc/PM_XLINK2_OUT_ODD_ANY_RCMD/        [Kernel PMU event]
  nest_xlink2_imc/PM_XLINK2_OUT_ODD_CYC/             [Kernel PMU event]
  nest_xlink2_imc/PM_XLINK2_OUT_ODD_DATA_COUNT/      [Kernel PMU event]
  nest_xlink2_imc/PM_XLINK2_OUT_ODD_TOTAL_UTIL/      [Kernel PMU event]
  stalled-cycles-backend OR cpu/stalled-cycles-backend/ [Kernel PMU event]
  stalled-cycles-frontend OR cpu/stalled-cycles-frontend/ [Kernel PMU event]
  thread_imc/CPM_0THRD_NON_IDLE_PCYC/                [Kernel PMU event]
  thread_imc/CPM_1THRD_NON_IDLE_INST/                [Kernel PMU event]
  thread_imc/CPM_1THRD_NON_IDLE_PCYC/                [Kernel PMU event]
  thread_imc/CPM_2THRD_NON_IDLE_INST/                [Kernel PMU event]
  thread_imc/CPM_2THRD_NON_IDLE_PCYC/                [Kernel PMU event]
  thread_imc/CPM_32MHZ_CYC/                          [Kernel PMU event]
  thread_imc/CPM_3THRD_NON_IDLE_INST/                [Kernel PMU event]
  thread_imc/CPM_3THRD_NON_IDLE_PCYC/                [Kernel PMU event]
  thread_imc/CPM_4THRD_NON_IDLE_INST/                [Kernel PMU event]
  thread_imc/CPM_4THRD_NON_IDLE_PCYC/                [Kernel PMU event]
  thread_imc/CPM_ANY_THRD_NON_IDLE_PCYC/             [Kernel PMU event]
  thread_imc/CPM_BUS_PUMP_CHIP_CORRECT_PRED/         [Kernel PMU event]
  thread_imc/CPM_BUS_PUMP_GROUP_CORRECT_PRED/        [Kernel PMU event]
  thread_imc/CPM_BUS_PUMP_GROUP_TOO_LARGE/           [Kernel PMU event]
  thread_imc/CPM_BUS_PUMP_GROUP_TOO_SMALL/           [Kernel PMU event]
  thread_imc/CPM_BUS_PUMP_NON_FABRIC_OP/             [Kernel PMU event]
  thread_imc/CPM_BUS_PUMP_SYSTEM_CORRECT_PRED/       [Kernel PMU event]
  thread_imc/CPM_BUS_PUMP_SYSTEM_TOO_LARGE/          [Kernel PMU event]
  thread_imc/CPM_BUS_PUMP_SYSTEM_TOO_SMALL/          [Kernel PMU event]
  thread_imc/CPM_CCYC/                               [Kernel PMU event]
  thread_imc/CPM_CORE_ALL_THRD_NON_IDLE_PCYC/        [Kernel PMU event]
  thread_imc/CPM_CS_1PLUS_PPC_CMPL/                  [Kernel PMU event]
  thread_imc/CPM_CS_1PLUS_PPC_CMPL_KERNEL/           [Kernel PMU event]
  thread_imc/CPM_CS_1PLUS_PPC_CMPL_USER/             [Kernel PMU event]
  thread_imc/CPM_CS_32MHZ_CYC/                       [Kernel PMU event]
  thread_imc/CPM_CS_32MHZ_CYC_KERNEL/                [Kernel PMU event]
  thread_imc/CPM_CS_32MHZ_CYC_USER/                  [Kernel PMU event]
  thread_imc/CPM_CS_BRU_CMPL/                        [Kernel PMU event]
  thread_imc/CPM_CS_BRU_CMPL_KERNEL/                 [Kernel PMU event]
  thread_imc/CPM_CS_BRU_CMPL_USER/                   [Kernel PMU event]
  thread_imc/CPM_CS_BR_MPRED/                        [Kernel PMU event]
  thread_imc/CPM_CS_BR_MPRED_KERNEL/                 [Kernel PMU event]
  thread_imc/CPM_CS_BR_MPRED_USER/                   [Kernel PMU event]
  thread_imc/CPM_CS_BR_TAKEN/                        [Kernel PMU event]
  thread_imc/CPM_CS_BR_TAKEN_KERNEL/                 [Kernel PMU event]
  thread_imc/CPM_CS_BR_TAKEN_USER/                   [Kernel PMU event]
  thread_imc/CPM_CS_CMPLU_STALL_PCYC/                [Kernel PMU event]
  thread_imc/CPM_CS_CMPLU_STALL_PCYC_KERNEL/         [Kernel PMU event]
  thread_imc/CPM_CS_CMPLU_STALL_PCYC_USER/           [Kernel PMU event]
  thread_imc/CPM_CS_CORE_ICT_EMPTY_PCYC/             [Kernel PMU event]
  thread_imc/CPM_CS_CORE_ICT_EMPTY_PCYC_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_CORE_ICT_EMPTY_PCYC_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_CORE_MODE_SMT2_CCYC/             [Kernel PMU event]
  thread_imc/CPM_CS_CORE_MODE_SMT2_CCYC_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_CORE_MODE_SMT2_CCYC_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_CORE_MODE_SMT4_CCYC/             [Kernel PMU event]
  thread_imc/CPM_CS_CORE_MODE_SMT4_CCYC_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_CORE_MODE_SMT4_CCYC_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_CORE_MODE_ST_CCYC/               [Kernel PMU event]
  thread_imc/CPM_CS_CORE_MODE_ST_CCYC_KERNEL/        [Kernel PMU event]
  thread_imc/CPM_CS_CORE_MODE_ST_CCYC_USER/          [Kernel PMU event]
  thread_imc/CPM_CS_CORE_PCYC/                       [Kernel PMU event]
  thread_imc/CPM_CS_CORE_PCYC_KERNEL/                [Kernel PMU event]
  thread_imc/CPM_CS_CORE_PCYC_USER/                  [Kernel PMU event]
  thread_imc/CPM_CS_DATA_TABLEWALK_PCYC/             [Kernel PMU event]
  thread_imc/CPM_CS_DATA_TABLEWALK_PCYC_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_DATA_TABLEWALK_PCYC_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_DERAT_MISS/                      [Kernel PMU event]
  thread_imc/CPM_CS_DERAT_MISS_KERNEL/               [Kernel PMU event]
  thread_imc/CPM_CS_DERAT_MISS_USER/                 [Kernel PMU event]
  thread_imc/CPM_CS_DISP_HELD_PCYC/                  [Kernel PMU event]
  thread_imc/CPM_CS_DISP_HELD_PCYC_KERNEL/           [Kernel PMU event]
  thread_imc/CPM_CS_DISP_HELD_PCYC_USER/             [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_16G/                   [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_16G_KERNEL/            [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_16G_USER/              [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_16M/                   [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_16M_KERNEL/            [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_16M_USER/              [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_1G/                    [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_1G_KERNEL/             [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_1G_USER/               [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_2M/                    [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_2M_KERNEL/             [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_2M_USER/               [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_4K/                    [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_4K_KERNEL/             [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_4K_USER/               [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_64K/                   [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_64K_KERNEL/            [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_MISS_64K_USER/              [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_RELOAD/                     [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_RELOAD_KERNEL/              [Kernel PMU event]
  thread_imc/CPM_CS_DTLB_RELOAD_USER/                [Kernel PMU event]
  thread_imc/CPM_CS_FLOP/                            [Kernel PMU event]
  thread_imc/CPM_CS_FLOP_KERNEL/                     [Kernel PMU event]
  thread_imc/CPM_CS_FLOP_USER/                       [Kernel PMU event]
  thread_imc/CPM_CS_FLUSH/                           [Kernel PMU event]
  thread_imc/CPM_CS_FLUSH_KERNEL/                    [Kernel PMU event]
  thread_imc/CPM_CS_FLUSH_USER/                      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_IFETCH/                  [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_IFETCH_KERNEL/           [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_IFETCH_USER/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_A_IFETCH/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_A_IFETCH_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_A_IFETCH_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_A_LDATA/              [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_A_LDATA_KERNEL/       [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_A_LDATA_USER/         [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_X_IFETCH/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_X_IFETCH_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_X_IFETCH_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_X_LDATA/              [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_X_LDATA_KERNEL/       [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_L3_X_LDATA_USER/         [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_LDATA/                   [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_LDATA_KERNEL/            [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L2_LDATA_USER/              [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L3_IFETCH/                  [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L3_IFETCH_KERNEL/           [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L3_IFETCH_USER/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L3_LDATA/                   [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L3_LDATA_KERNEL/            [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L3_LDATA_USER/              [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_IFETCH/                  [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_IFETCH_KERNEL/           [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_IFETCH_USER/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_LDATA/                   [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_LDATA_USER/              [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_DPTEG/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_DPTEG_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_DPTEG_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_IFETCH/            [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_IFETCH_KERNEL/     [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_IFETCH_USER/       [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_IPTEG/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_IPTEG_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_IPTEG_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_LDATA/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_LDATA_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_A_LDATA_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_DPTEG/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_DPTEG_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_DPTEG_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_IFETCH/            [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_IFETCH_KERNEL/     [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_IFETCH_USER/       [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_IPTEG/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_IPTEG_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_IPTEG_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_LDATA/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_LDATA_KERNEL/      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_L4_MEM_X_LDATA_USER/        [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_IFETCH/                 [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_IFETCH_KERNEL/          [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_IFETCH_USER/            [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_LDATA/                  [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_LDATA_USER/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_LOCAL/                  [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_LOCAL_KERNEL/           [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_LOCAL_USER/             [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_NON_LOCAL/              [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_NON_LOCAL_KERNEL/       [Kernel PMU event]
  thread_imc/CPM_CS_FROM_MEM_NON_LOCAL_USER/         [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L2_IFETCH/          [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L2_IFETCH_KERNEL/   [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L2_IFETCH_USER/     [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L2_LDATA/           [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L2_LDATA_KERNEL/    [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L2_LDATA_USER/      [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L3_IFETCH/          [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L3_IFETCH_KERNEL/   [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L3_IFETCH_USER/     [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L3_LDATA/           [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L3_LDATA_KERNEL/    [Kernel PMU event]
  thread_imc/CPM_CS_FROM_ON_CHIP_L3_LDATA_USER/      [Kernel PMU event]
  thread_imc/CPM_CS_IERAT_MISS/                      [Kernel PMU event]
  thread_imc/CPM_CS_IERAT_MISS_KERNEL/               [Kernel PMU event]
  thread_imc/CPM_CS_IERAT_MISS_USER/                 [Kernel PMU event]
  thread_imc/CPM_CS_IFETCH_DEMAND_PCYC/              [Kernel PMU event]
  thread_imc/CPM_CS_IFETCH_DEMAND_PCYC_KERNEL/       [Kernel PMU event]
  thread_imc/CPM_CS_IFETCH_DEMAND_PCYC_USER/         [Kernel PMU event]
  thread_imc/CPM_CS_INST/                            [Kernel PMU event]
  thread_imc/CPM_CS_INST_KERNEL/                     [Kernel PMU event]
  thread_imc/CPM_CS_INST_USER/                       [Kernel PMU event]
  thread_imc/CPM_CS_ITLB_RELOAD/                     [Kernel PMU event]
  thread_imc/CPM_CS_ITLB_RELOAD_KERNEL/              [Kernel PMU event]
  thread_imc/CPM_CS_ITLB_RELOAD_USER/                [Kernel PMU event]
  thread_imc/CPM_CS_L1_MISS_IFETCH/                  [Kernel PMU event]
  thread_imc/CPM_CS_L1_MISS_IFETCH_KERNEL/           [Kernel PMU event]
  thread_imc/CPM_CS_L1_MISS_IFETCH_USER/             [Kernel PMU event]
  thread_imc/CPM_CS_LSU_EMPTY_PCYC/                  [Kernel PMU event]
  thread_imc/CPM_CS_LSU_EMPTY_PCYC_KERNEL/           [Kernel PMU event]
  thread_imc/CPM_CS_LSU_EMPTY_PCYC_USER/             [Kernel PMU event]
  thread_imc/CPM_CS_MISS_L1_LDATA/                   [Kernel PMU event]
  thread_imc/CPM_CS_MISS_L1_LDATA_KERNEL/            [Kernel PMU event]
  thread_imc/CPM_CS_MISS_L1_LDATA_USER/              [Kernel PMU event]
  thread_imc/CPM_CS_PCYC/                            [Kernel PMU event]
  thread_imc/CPM_CS_PCYC_KERNEL/                     [Kernel PMU event]
  thread_imc/CPM_CS_PCYC_USER/                       [Kernel PMU event]
  thread_imc/CPM_CS_PPC_DISP/                        [Kernel PMU event]
  thread_imc/CPM_CS_PPC_DISP_KERNEL/                 [Kernel PMU event]
  thread_imc/CPM_CS_PPC_DISP_USER/                   [Kernel PMU event]
  thread_imc/CPM_CS_PURR/                            [Kernel PMU event]
  thread_imc/CPM_CS_PURR_KERNEL/                     [Kernel PMU event]
  thread_imc/CPM_CS_PURR_USER/                       [Kernel PMU event]
  thread_imc/CPM_CS_SPURR/                           [Kernel PMU event]
  thread_imc/CPM_CS_SPURR_KERNEL/                    [Kernel PMU event]
  thread_imc/CPM_CS_SPURR_USER/                      [Kernel PMU event]
  thread_imc/CPM_CS_ST_FIN/                          [Kernel PMU event]
  thread_imc/CPM_CS_ST_FIN_KERNEL/                   [Kernel PMU event]
  thread_imc/CPM_CS_ST_FIN_USER/                     [Kernel PMU event]
  thread_imc/CPM_CS_ST_MISS_L1/                      [Kernel PMU event]
  thread_imc/CPM_CS_ST_MISS_L1_KERNEL/               [Kernel PMU event]
  thread_imc/CPM_CS_ST_MISS_L1_USER/                 [Kernel PMU event]
  thread_imc/CPM_EXT_INT_DOORBELL/                   [Kernel PMU event]
  thread_imc/CPM_EXT_INT_EBB/                        [Kernel PMU event]
  thread_imc/CPM_EXT_INT_HYP/                        [Kernel PMU event]
  thread_imc/CPM_EXT_INT_OS/                         [Kernel PMU event]
  thread_imc/CPM_INST/                               [Kernel PMU event]
  thread_imc/CPM_L2L3_GROUP_PB_REQ/                  [Kernel PMU event]
  thread_imc/CPM_L2L3_NODAL_PB_REQ/                  [Kernel PMU event]
  thread_imc/CPM_L2L3_SYS_PB_REQ/                    [Kernel PMU event]
  thread_imc/CPM_LARX_FIN/                           [Kernel PMU event]
  thread_imc/CPM_LWSYNC_PCYC/                        [Kernel PMU event]
  thread_imc/CPM_MSR_ADJUNCT_PCYC/                   [Kernel PMU event]
  thread_imc/CPM_MSR_AJUNCT_INST/                    [Kernel PMU event]
  thread_imc/CPM_MSR_EXT_INT_DIS_CCYC/               [Kernel PMU event]
  thread_imc/CPM_MSR_HV_INST/                        [Kernel PMU event]
  thread_imc/CPM_MSR_HV_PCYC/                        [Kernel PMU event]
  thread_imc/CPM_MSR_PRIV_INST/                      [Kernel PMU event]
  thread_imc/CPM_MSR_PRIV_PCYC/                      [Kernel PMU event]
  thread_imc/CPM_MSR_PROB_INST/                      [Kernel PMU event]
  thread_imc/CPM_MSR_PROB_PCYC/                      [Kernel PMU event]
  thread_imc/CPM_MSR_TA_LIC_INST/                    [Kernel PMU event]
  thread_imc/CPM_MSR_TA_LIC_PCYC/                    [Kernel PMU event]
  thread_imc/CPM_MSR_TA_SYSTEM_INST/                 [Kernel PMU event]
  thread_imc/CPM_MSR_TA_SYS_PCYC/                    [Kernel PMU event]
  thread_imc/CPM_MSR_TA_USER_INST/                   [Kernel PMU event]
  thread_imc/CPM_MSR_TA_USER_PCYC/                   [Kernel PMU event]
  thread_imc/CPM_MSR_TRANSMEM_INST/                  [Kernel PMU event]
  thread_imc/CPM_MSR_TRANSMEM_PCYC/                  [Kernel PMU event]
  thread_imc/CPM_NON_IDLE_INST/                      [Kernel PMU event]
  thread_imc/CPM_NON_IDLE_PCYC/                      [Kernel PMU event]
  thread_imc/CPM_PCYC/                               [Kernel PMU event]
  thread_imc/CPM_SMT_MODE_SWITCH/                    [Kernel PMU event]
  thread_imc/CPM_SMT_MODE_SWITCH_KERNEL/             [Kernel PMU event]
  thread_imc/CPM_SMT_MODE_SWITCH_USER/               [Kernel PMU event]
  thread_imc/CPM_STCX_FAIL/                          [Kernel PMU event]
  thread_imc/CPM_STCX_FIN/                           [Kernel PMU event]
  thread_imc/CPM_SYNC_PCYC/                          [Kernel PMU event]
  thread_imc/CPM_THREAD_NAP_STATE_LOSS_CCYC/         [Kernel PMU event]
  thread_imc/CPM_THREAD_NAP_STATE_SAVE_CCYC/         [Kernel PMU event]
  thread_imc/CPM_TLBIE/                              [Kernel PMU event]
  thread_imc/CPM_TLB_RELOAD_L2/                      [Kernel PMU event]
  thread_imc/CPM_TLB_RELOAD_L3/                      [Kernel PMU event]
  thread_imc/CPM_TLB_RELOAD_L3_MISS/                 [Kernel PMU event]
  thread_imc/CPM_TM_ABORTS/                          [Kernel PMU event]
  thread_imc/CPM_TM_PASSED/                          [Kernel PMU event]

cache:
  pm_br_mpred_cmpl                                  
       [Number of Branch Mispredicts]
  pm_cmplu_stall_dmiss_l2l3                         
       [Completion stall by Dcache miss which resolved in L2/L3]
  pm_cmplu_stall_dmiss_l2l3_conflict                
       [Completion stall due to cache miss that resolves in the L2 or L3 with
        a conflict]
  pm_cmplu_stall_flush_any_thread                   
       [Cycles in which the NTC instruction is not allowed to complete because
        any of the 4 threads in the same core suffered a flush, which blocks
        completion]
  pm_cmplu_stall_fxlong                             
       [Completion stall due to a long latency scalar fixed point instruction
        (division, square root)]
  pm_cmplu_stall_fxu                                
       [Finish stall due to a scalar fixed point or CR instruction in the
        execution pipeline. These instructions get routed to the ALU, ALU2,
        and DIV pipes]
  pm_cmplu_stall_larx                               
       [Finish stall because the NTF instruction was a larx waiting to be
        satisfied]
  pm_cmplu_stall_lhs                                
       [Finish stall because the NTF instruction was a load that hit on an
        older store and it was waiting for store data]
  pm_cmplu_stall_lmq_full                           
       [Finish stall because the NTF instruction was a load that missed in the
        L1 and the LMQ was unable to accept this load miss request because it
        was full]
  pm_cmplu_stall_load_finish                        
       [Finish stall because the NTF instruction was a load instruction with
        all its dependencies satisfied just going through the LSU pipe to
        finish]
  pm_inst_from_on_chip_cache                        
       [The processor's Instruction cache was reloaded either shared or
        modified data from another core's L2/L3 on the same chip due to an
        instruction fetch (not prefetch)]
  pm_inst_from_rl2l3_mod                            
       [The processor's Instruction cache was reloaded with Modified (M) data
        from another chip's L2 or L3 on the same Node or Group (Remote), as
        this chip due to an instruction fetch (not prefetch)]
  pm_inst_from_rl2l3_shr                            
       [The processor's Instruction cache was reloaded with Shared (S) data
        from another chip's L2 or L3 on the same Node or Group (Remote), as
        this chip due to an instruction fetch (not prefetch)]
  pm_inst_from_rl4                                  
       [The processor's Instruction cache was reloaded from another chip's L4
        on the same Node or Group ( Remote) due to an instruction fetch (not
        prefetch)]
  pm_mrk_data_from_rl4_cyc                          
       [Duration in cycles to reload from another chip's L4 on the same Node
        or Group ( Remote) due to a marked load]
  pm_mrk_dpteg_from_l2_mepf                         
       [A Page Table Entry was loaded into the TLB from local core's L2 hit
        without dispatch conflicts on Mepf state. due to a marked data side
        request. When using Radix Page Translation, this count excludes PDE
        reloads. Only PTE reloads are included]
  pm_mrk_dpteg_from_rmem                            
       [A Page Table Entry was loaded into the TLB from another chip's memory
        on the same Node or Group ( Remote) due to a marked data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_mrk_dtlb_miss                                  
       [Marked dtlb miss]
  pm_thrd_conc_run_inst                             
       [PPC Instructions Finished by this thread when all threads in the core
        had the run-latch set]
  pm_thresh_exc_128                                 
       [Threshold counter exceeded a value of 128]
  pm_thresh_exc_4096                                
       [Threshold counter exceed a count of 4096]

floating point:
  pm_flush_completion                               
       [The instruction that was next to complete did not complete because it
        suffered a flush]
  pm_mem_loc_thresh_ifu                             
       [Local Memory above threshold for IFU speculation control]
  pm_mrk_data_from_l2_disp_conflict_ldhitst_cyc     
       [Duration in cycles to reload from local core's L2 with load hit store
        conflict due to a marked load]
  pm_mrk_derat_miss_64k                             
       [Marked Data ERAT Miss (Data TLB Access) page size 64K]
  pm_radix_pwc_l2_pde_from_l2                       
       [A Page Directory Entry was reloaded to a level 2 page walk cache from
        the core's L2 data cache]
  pm_thresh_not_met                                 
       [Threshold counter did not meet threshold]

frontend:
  pm_1plus_ppc_cmpl                                 
       [1 or more ppc insts finished]
  pm_br_taken_cmpl                                  
       [New event for Branch Taken]
  pm_cmplu_stall_lrq_other                          
       [Finish stall due to LRQ miscellaneous reasons, lost arbitration to LMQ
        slot, bank collisions, set prediction cleanup, set prediction multihit
        and others]
  pm_cmplu_stall_lsaq_arb                           
       [Finish stall because the NTF instruction was a load or store that was
        held in LSAQ because an older instruction from SRQ or LRQ won
        arbitration to the LSU pipe when this instruction tried to launch]
  pm_cmplu_stall_lsu                                
       [Completion stall by LSU instruction]
  pm_cmplu_stall_lsu_fin                            
       [Finish stall because the NTF instruction was an LSU op (other than a
        load or a store) with all its dependencies met and just going through
        the LSU pipe to finish]
  pm_cmplu_stall_lsu_flush_next                     
       [Completion stall of one cycle because the LSU requested to flush the
        next iop in the sequence. It takes 1 cycle for the ISU to process this
        request before the LSU instruction is allowed to complete]
  pm_cmplu_stall_lsu_mfspr                          
       [Finish stall because the NTF instruction was a mfspr instruction
        targeting an LSU SPR and it was waiting for the register data to be
        returned]
  pm_cmplu_stall_mtfpscr                            
       [Completion stall because the ISU is updating the register and
        notifying the Effective Address Table (EAT)]
  pm_cmplu_stall_st_fwd                             
       [Completion stall due to store forward]
  pm_cmplu_stall_stcx                               
       [Finish stall because the NTF instruction was a stcx waiting for
        response from L2]
  pm_cmplu_stall_store_data                         
       [Finish stall because the next to finish instruction was a store
        waiting on data]
  pm_cmplu_stall_store_fin_arb                      
       [Finish stall because the NTF instruction was a store waiting for a
        slot in the store finish pipe. This means the instruction is ready to
        finish but there are instructions ahead of it, using the finish pipe]
  pm_cmplu_stall_store_finish                       
       [Finish stall because the NTF instruction was a store with all its
        dependencies met, just waiting to go through the LSU pipe to finish]
  pm_cmplu_stall_store_pipe_arb                     
       [Finish stall because the NTF instruction was a store waiting for the
        next relaunch opportunity after an internal reject. This means the
        instruction is ready to relaunch and tried once but lost arbitration]
  pm_cmplu_stall_sync_pmu_int                       
       [Cycles in which the NTC instruction is waiting for a synchronous PMU
        interrupt]
  pm_cmplu_stall_tend                               
       [Finish stall because the NTF instruction was a tend instruction
        awaiting response from L2]
  pm_data_from_l31_eco_mod                          
       [The processor's data cache was reloaded with Modified (M) data from
        another core's ECO L3 on the same chip due to a demand load]
  pm_data_from_l3_mepf                              
       [The processor's data cache was reloaded from local core's L3 without
        dispatch conflicts hit on Mepf state due to a demand load]
  pm_data_from_l3_no_conflict                       
       [The processor's data cache was reloaded from local core's L3 without
        conflict due to a demand load]
  pm_dpteg_from_l3                                  
       [A Page Table Entry was loaded into the TLB from local core's L3 due to
        a data side request. When using Radix Page Translation, this count
        excludes PDE reloads. Only PTE reloads are included]
  pm_dpteg_from_rmem                                
       [A Page Table Entry was loaded into the TLB from another chip's memory
        on the same Node or Group ( Remote) due to a data side request. When
        using Radix Page Translation, this count excludes PDE reloads. Only
        PTE reloads are included]
  pm_inst_from_l3miss                               
       [Marked instruction was reloaded from a location beyond the local
        chiplet]
  pm_inst_pump_cpred                                
       [Pump prediction correct. Counts across all types of pumps for an
        instruction fetch]
  pm_inst_pump_mpred                                
       [Pump misprediction. Counts across all types of pumps for an
        instruction fetch]
  pm_inst_sys_pump_cpred                            
       [Initial and Final Pump Scope was system pump (prediction=correct) for
        an instruction fetch]
  pm_inst_sys_pump_mpred                            
       [Final Pump Scope (system) mispredicted. Either the original scope was
        too small (Chip/Group) or the original scope was System and it should
        have been smaller. Counts for an instruction fetch]
  pm_inst_sys_pump_mpred_rty                        
       [Final Pump Scope (system) ended up larger than Initial Pump Scope
        (Chip/Group) for an instruction fetch]
  pm_iops_cmpl                                      
       [Internal Operations completed]
  pm_ipteg_from_dl2l3_mod                           
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a instruction side request]
  pm_ipteg_from_l31_eco_mod                         
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another core's ECO L3 on the same chip due to a instruction side
        request]
  pm_ipteg_from_l31_eco_shr                         
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another core's ECO L3 on the same chip due to a instruction side
        request]
  pm_ipteg_from_l31_mod                             
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another core's L3 on the same chip due to a instruction side request]
  pm_ipteg_from_l31_shr                             
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another core's L3 on the same chip due to a instruction side request]
  pm_ipteg_from_l3_mepf                             
       [A Page Table Entry was loaded into the TLB from local core's L3
        without dispatch conflicts hit on Mepf state. due to a instruction
        side request]
  pm_ipteg_from_l3_no_conflict                      
       [A Page Table Entry was loaded into the TLB from local core's L3
        without conflict due to a instruction side request]
  pm_ipteg_from_l3miss                              
       [A Page Table Entry was loaded into the TLB from a location other than
        the local core's L3 due to a instruction side request]
  pm_ld_miss_l1                                     
       [Load Missed L1, counted at execution time (can be greater than loads
        finished). LMQ merges are not included in this count. i.e. if a load
        instruction misses on an address that is already allocated on the LMQ,
        this event will not increment for that load). Note that this count is
        per slice, so if a load spans multiple slices this event will
        increment multiple times for a single load]
  pm_lsu_reject_lmq_full                            
       [LSU Reject due to LMQ full (up to 4 per cycles)]
  pm_lsu_srq_full_cyc                               
       [Cycles in which the Store Queue is full on all 4 slices. This is event
        is not per thread. All the threads will see the same count for this
        core resource]
  pm_mrk_data_from_l2_disp_conflict_other           
       [The processor's data cache was reloaded from local core's L2 with
        dispatch conflict due to a marked load]
  pm_mrk_data_from_l31_eco_shr                      
       [The processor's data cache was reloaded with Shared (S) data from
        another core's ECO L3 on the same chip due to a marked load]
  pm_mrk_data_from_on_chip_cache_cyc                
       [Duration in cycles to reload either shared or modified data from
        another core's L2/L3 on the same chip due to a marked load]
  pm_mrk_data_from_rl2l3_shr_cyc                    
       [Duration in cycles to reload with Shared (S) data from another chip's
        L2 or L3 on the same Node or Group (Remote), as this chip due to a
        marked load]
  pm_mrk_data_from_rl4                              
       [The processor's data cache was reloaded from another chip's L4 on the
        same Node or Group ( Remote) due to a marked load]
  pm_mrk_derat_miss                                 
       [Erat Miss (TLB Access) All page sizes]
  pm_mrk_fab_rsp_claim_rty                          
       [Sampled store did a rwitm and got a rty]
  pm_mrk_fab_rsp_dclaim                             
       [Marked store had to do a dclaim]
  pm_mrk_fab_rsp_dclaim_cyc                         
       [cycles L2 RC took for a dclaim]
  pm_mrk_fab_rsp_rd_rty                             
       [Sampled L2 reads retry count]
  pm_mrk_fab_rsp_rd_t_intv                          
       [Sampled Read got a T intervention]
  pm_mrk_fab_rsp_rwitm_cyc                          
       [cycles L2 RC took for a rwitm]
  pm_mrk_fab_rsp_rwitm_rty                          
       [Sampled store did a rwitm and got a rty]
  pm_mrk_l2_rc_disp                                 
       [Marked Instruction RC dispatched in L2]
  pm_mrk_l2_rc_done                                 
       [Marked RC done]
  pm_mrk_l2_tm_req_abort                            
       [TM abort]
  pm_mrk_larx_fin                                   
       [Larx finished]
  pm_mrk_ld_miss_exposed_cyc                        
       [Marked Load exposed Miss (use edge detect to count #)]
  pm_ntc_issue_held_darq_full                       
       [The NTC instruction is being held at dispatch because there are no
        slots in the DARQ for it]
  pm_pmc4_overflow                                  
       [Overflow from counter 4]
  pm_pmc4_rewind                                    
       [PMC4 Rewind Event]
  pm_suspended                                      
       [Counter OFF]
  pm_sync_mrk_br_link                               
       [Marked Branch and link branch that can cause a synchronous interrupt]
  pm_sync_mrk_br_mpred                              
       [Marked Branch mispredict that can cause a synchronous interrupt]
  pm_thresh_acc                                     
       [This event increments every time the threshold event counter ticks.
        Thresholding must be enabled (via MMCRA) and the thresholding start
        event must occur for this counter to increment. It will stop
        incrementing when the thresholding stop event occurs or when
        thresholding is disabled, until the next time a configured
        thresholding start event occurs]
  pm_thresh_exc_1024                                
       [Threshold counter exceeded a value of 1024]
  pm_thresh_exc_256                                 
       [Threshold counter exceed a count of 256]
  pm_thresh_met                                     
       [threshold exceeded]
  pm_tlb_hit                                        
       [Number of times the TLB had the data required by the instruction.
        Applies to both HPT and RPT]
  pm_tm_trans_run_inst                              
       [Run instructions completed in transactional state (gated by the run
        latch)]
  pm_vector_st_cmpl                                 
       [Number of vector store instructions completed]

marked:
  pm_cmplu_stall_dmiss_remote                       
       [Completion stall by Dcache miss which resolved from remote chip (cache
        or memory)]
  pm_cmplu_stall_dp                                 
       [Finish stall because the NTF instruction was a scalar instruction
        issued to the Double Precision execution pipe and waiting to finish.
        Includes binary floating point instructions in 32 and 64 bit binary
        floating point format. Not qualified multicycle. Qualified by NOT
        vector]
  pm_cmplu_stall_eieio                              
       [Finish stall because the NTF instruction is an EIEIO waiting for
        response from L2]
  pm_cmplu_stall_exception                          
       [Cycles in which the NTC instruction is not allowed to complete because
        it was interrupted by ANY exception, which has to be serviced before
        the instruction can complete]
  pm_cmplu_stall_nested_tend                        
       [Completion stall because the ISU is updating the TEXASR to keep track
        of the nested tend and decrement the TEXASR nested level. This is a
        short delay]
  pm_cmplu_stall_ntc_disp_fin                       
       [Finish stall because the NTF instruction was one that must finish at
        dispatch]
  pm_cmplu_stall_ntc_flush                          
       [Completion stall due to ntc flush]
  pm_cmplu_stall_other_cmpl                         
       [Instructions the core completed while this tread was stalled]
  pm_cmplu_stall_paste                              
       [Finish stall because the NTF instruction was a paste waiting for
        response from L2]
  pm_cmplu_stall_pm                                 
       [Finish stall because the NTF instruction was issued to the Permute
        execution pipe and waiting to finish. Includes permute and decimal
        fixed point instructions (128 bit BCD arithmetic) + a few 128 bit
        fixpoint add/subtract instructions with carry. Not qualified by vector
        or multicycle]
  pm_cmplu_stall_slb                                
       [Finish stall because the NTF instruction was awaiting L2 response for
        an SLB]
  pm_cmplu_stall_spec_finish                        
       [Finish stall while waiting for the non-speculative finish of either a
        stcx waiting for its result or a load waiting for non-critical sectors
        of data and ECC]
  pm_darq0_0_3_entries                              
       [Cycles in which 3 or less DARQ entries (out of 12) are in use]
  pm_darq0_10_12_entries                            
       [Cycles in which 10 or more DARQ entries (out of 12) are in use]
  pm_darq0_4_6_entries                              
       [Cycles in which 4, 5, or 6 DARQ entries (out of 12) are in use]
  pm_darq0_7_9_entries                              
       [Cycles in which 7,8, or 9 DARQ entries (out of 12) are in use]
  pm_darq1_0_3_entries                              
       [Cycles in which 3 or fewer DARQ1 entries (out of 12) are in use]
  pm_darq_store_reject                              
       [The DARQ attempted to transmit a store into an LSAQ or SRQ entry but
        It was rejected. Divide by PM_DARQ_STORE_XMIT to get reject ratio]
  pm_darq_store_xmit                                
       [The DARQ attempted to transmit a store into an LSAQ or SRQ entry.
        Includes rejects. Not qualified by thread, so it includes counts for
        the whole core]
  pm_data_from_l2                                   
       [The processor's data cache was reloaded from local core's L2 due to a
        demand load]
  pm_data_from_l31_eco_shr                          
       [The processor's data cache was reloaded with Shared (S) data from
        another core's ECO L3 on the same chip due to a demand load]
  pm_data_from_l31_mod                              
       [The processor's data cache was reloaded with Modified (M) data from
        another core's L3 on the same chip due to a demand load]
  pm_data_from_l31_shr                              
       [The processor's data cache was reloaded with Shared (S) data from
        another core's L3 on the same chip due to a demand load]
  pm_data_from_l3miss                               
       [Demand LD - L3 Miss (not L2 hit and not L3 hit)]
  pm_data_from_l3miss_mod                           
       [The processor's data cache was reloaded from a location other than the
        local core's L3 due to a demand load]
  pm_data_from_lmem                                 
       [The processor's data cache was reloaded from the local chip's Memory
        due to a demand load]
  pm_data_from_memory                               
       [The processor's data cache was reloaded from a memory location
        including L4 from local remote or distant due to a demand load]
  pm_data_from_off_chip_cache                       
       [The processor's data cache was reloaded either shared or modified data
        from another core's L2/L3 on a different chip (remote or distant) due
        to a demand load]
  pm_data_from_on_chip_cache                        
       [The processor's data cache was reloaded either shared or modified data
        from another core's L2/L3 on the same chip due to a demand load]
  pm_data_from_rl4                                  
       [The processor's data cache was reloaded from another chip's L4 on the
        same Node or Group ( Remote) due to a demand load]
  pm_data_from_rmem                                 
       [The processor's data cache was reloaded from another chip's memory on
        the same Node or Group ( Remote) due to a demand load]
  pm_data_grp_pump_mpred                            
       [Final Pump Scope (Group) ended up either larger or smaller than
        Initial Pump Scope for a demand load]
  pm_data_grp_pump_mpred_rty                        
       [Final Pump Scope (Group) ended up larger than Initial Pump Scope
        (Chip) for a demand load]
  pm_data_pump_cpred                                
       [Pump prediction correct. Counts across all types of pumps for a demand
        load]
  pm_data_pump_mpred                                
       [Pump misprediction. Counts across all types of pumps for a demand load]
  pm_data_sys_pump_cpred                            
       [Initial and Final Pump Scope was system pump (prediction=correct) for
        a demand load]
  pm_data_sys_pump_mpred                            
       [Final Pump Scope (system) mispredicted. Either the original scope was
        too small (Chip/Group) or the original scope was System and it should
        have been smaller. Counts for a demand load]
  pm_data_sys_pump_mpred_rty                        
       [Final Pump Scope (system) ended up larger than Initial Pump Scope
        (Chip/Group) for a demand load]
  pm_disp_held_hb_full                              
       [Dispatch held due to History Buffer full. Could be
        GPR/VSR/VMR/FPR/CR/XVF; CR; XVF (XER/VSCR/FPSCR)]
  pm_disp_starved                                   
       [Dispatched Starved]
  pm_dpteg_from_l2                                  
       [A Page Table Entry was loaded into the TLB from local core's L2 due to
        a data side request. When using Radix Page Translation, this count
        excludes PDE reloads. Only PTE reloads are included]
  pm_dpteg_from_l31_eco_shr                         
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another core's ECO L3 on the same chip due to a data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_dpteg_from_l31_mod                             
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another core's L3 on the same chip due to a data side request. When
        using Radix Page Translation, this count excludes PDE reloads. Only
        PTE reloads are included]
  pm_dpteg_from_l31_shr                             
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another core's L3 on the same chip due to a data side request. When
        using Radix Page Translation, this count excludes PDE reloads. Only
        PTE reloads are included]
  pm_dpteg_from_l3_no_conflict                      
       [A Page Table Entry was loaded into the TLB from local core's L3
        without conflict due to a data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_dpteg_from_lmem                                
       [A Page Table Entry was loaded into the TLB from the local chip's
        Memory due to a data side request. When using Radix Page Translation,
        this count excludes PDE reloads. Only PTE reloads are included]
  pm_freq_up                                        
       [Power Management: Above Threshold A]
  pm_fxu_1plus_busy                                 
       [At least one of the 4 FXU units is busy]
  pm_grp_pump_cpred                                 
       [Initial and Final Pump Scope and data sourced across this scope was
        group pump for all data types excluding data prefetch (demand
        load,inst prefetch,inst fetch,xlate)]
  pm_inst_from_dl2l3_mod                            
       [The processor's Instruction cache was reloaded with Modified (M) data
        from another chip's L2 or L3 on a different Node or Group (Distant),
        as this chip due to an instruction fetch (not prefetch)]
  pm_inst_from_dl2l3_shr                            
       [The processor's Instruction cache was reloaded with Shared (S) data
        from another chip's L2 or L3 on a different Node or Group (Distant),
        as this chip due to an instruction fetch (not prefetch)]
  pm_inst_from_dl4                                  
       [The processor's Instruction cache was reloaded from another chip's L4
        on a different Node or Group (Distant) due to an instruction fetch
        (not prefetch)]
  pm_inst_from_dmem                                 
       [The processor's Instruction cache was reloaded from another chip's
        memory on the same Node or Group (Distant) due to an instruction fetch
        (not prefetch)]
  pm_inst_from_l2                                   
       [The processor's Instruction cache was reloaded from local core's L2
        due to an instruction fetch (not prefetch)]
  pm_inst_from_l2_disp_conflict_ldhitst             
       [The processor's Instruction cache was reloaded from local core's L2
        with load hit store conflict due to an instruction fetch (not
        prefetch)]
  pm_inst_from_l2_disp_conflict_other               
       [The processor's Instruction cache was reloaded from local core's L2
        with dispatch conflict due to an instruction fetch (not prefetch)]
  pm_inst_from_l2_no_conflict                       
       [The processor's Instruction cache was reloaded from local core's L2
        without conflict due to an instruction fetch (not prefetch)]
  pm_inst_from_l31_eco_shr                          
       [The processor's Instruction cache was reloaded with Shared (S) data
        from another core's ECO L3 on the same chip due to an instruction
        fetch (not prefetch)]
  pm_inst_from_l31_mod                              
       [The processor's Instruction cache was reloaded with Modified (M) data
        from another core's L3 on the same chip due to an instruction fetch
        (not prefetch)]
  pm_inst_from_l31_shr                              
       [The processor's Instruction cache was reloaded with Shared (S) data
        from another core's L3 on the same chip due to an instruction fetch
        (not prefetch)]
  pm_inst_from_l3miss_mod                           
       [The processor's Instruction cache was reloaded from a location other
        than the local core's L3 due to a instruction fetch]
  pm_inst_from_ll4                                  
       [The processor's Instruction cache was reloaded from the local chip's
        L4 cache due to an instruction fetch (not prefetch)]
  pm_ipteg_from_l2                                  
       [A Page Table Entry was loaded into the TLB from local core's L2 due to
        a instruction side request]
  pm_ipteg_from_l21_mod                             
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another core's L2 on the same chip due to a instruction side request]
  pm_ipteg_from_l21_shr                             
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another core's L2 on the same chip due to a instruction side request]
  pm_ipteg_from_l2_mepf                             
       [A Page Table Entry was loaded into the TLB from local core's L2 hit
        without dispatch conflicts on Mepf state. due to a instruction side
        request]
  pm_ipteg_from_l2miss                              
       [A Page Table Entry was loaded into the TLB from a location other than
        the local core's L2 due to a instruction side request]
  pm_ipteg_from_l3                                  
       [A Page Table Entry was loaded into the TLB from local core's L3 due to
        a instruction side request]
  pm_isq_36_44_entries                              
       [Cycles in which 36 or more Issue Queue entries are in use. This is a
        shared event, not per thread. There are 44 issue queue entries across
        4 slices in the whole core]
  pm_itlb_miss                                      
       [ITLB Reloaded. Counts 1 per ITLB miss for HPT but multiple for radix
        depending on number of levels traveresed]
  pm_l1_dcache_reload_valid                         
       [DL1 reloaded due to Demand Load]
  pm_l1_dcache_reloaded_all                         
       [L1 data cache reloaded for demand. If MMCR1[16] is 1, prefetches will
        be included as well]
  pm_l1_icache_miss                                 
       [Demand iCache Miss]
  pm_l1_icache_reloaded_all                         
       [Counts all Icache reloads includes demand, prefetch, prefetch turned
        into demand and demand turned into prefetch]
  pm_l1_icache_reloaded_pref                        
       [Counts all Icache prefetch reloads ( includes demand turned into
        prefetch)]
  pm_lmq_empty_cyc                                  
       [Cycles in which the LMQ has no pending load misses for this thread]
  pm_mem_loc_thresh_lsu_med                         
       [Local memory above threshold for data prefetch]
  pm_mem_pref                                       
       [Memory prefetch for this thread. Includes L4]
  pm_mrk_br_cmpl                                    
       [Branch Instruction completed]
  pm_mrk_br_mpred_cmpl                              
       [Marked Branch Mispredicted]
  pm_mrk_br_taken_cmpl                              
       [Marked Branch Taken completed]
  pm_mrk_bru_fin                                    
       [bru marked instr finish]
  pm_mrk_data_from_dl2l3_shr_cyc                    
       [Duration in cycles to reload with Shared (S) data from another chip's
        L2 or L3 on a different Node or Group (Distant), as this chip due to a
        marked load]
  pm_mrk_data_from_l3                               
       [The processor's data cache was reloaded from local core's L3 due to a
        marked load]
  pm_mrk_data_from_l3miss_cyc                       
       [Duration in cycles to reload from a location other than the local
        core's L3 due to a marked load]
  pm_mrk_data_from_ll4                              
       [The processor's data cache was reloaded from the local chip's L4 cache
        due to a marked load]
  pm_mrk_data_from_ll4_cyc                          
       [Duration in cycles to reload from the local chip's L4 cache due to a
        marked load]
  pm_mrk_dpteg_from_l31_eco_mod                     
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another core's ECO L3 on the same chip due to a marked data side
        request. When using Radix Page Translation, this count excludes PDE
        reloads. Only PTE reloads are included]
  pm_mrk_dpteg_from_l31_eco_shr                     
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another core's ECO L3 on the same chip due to a marked data side
        request. When using Radix Page Translation, this count excludes PDE
        reloads. Only PTE reloads are included]
  pm_mrk_dpteg_from_l3miss                          
       [A Page Table Entry was loaded into the TLB from a location other than
        the local core's L3 due to a marked data side request. When using
        Radix Page Translation, this count excludes PDE reloads. Only PTE
        reloads are included]
  pm_mrk_dpteg_from_ll4                             
       [A Page Table Entry was loaded into the TLB from the local chip's L4
        cache due to a marked data side request.. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_mrk_dpteg_from_lmem                            
       [A Page Table Entry was loaded into the TLB from the local chip's
        Memory due to a marked data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_mrk_dpteg_from_rl2l3_shr                       
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a marked data side request.. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_mrk_inst                                       
       [An instruction was marked. Includes both Random Instruction Sampling
        (RIS) at decode time and Random Event Sampling (RES) at the time the
        configured event happens]
  pm_mrk_inst_cmpl                                  
       [marked instruction completed]
  pm_mrk_inst_decoded                               
       [An instruction was marked at decode time. Random Instruction Sampling
        (RIS) only]
  pm_mrk_inst_disp                                  
       [The thread has dispatched a randomly sampled marked instruction]
  pm_mrk_inst_fin                                   
       [marked instruction finished]
  pm_mrk_inst_issued                                
       [Marked instruction issued]
  pm_mrk_inst_timeo                                 
       [marked Instruction finish timeout (instruction lost)]
  pm_mrk_st_fwd                                     
       [Marked st forwards]
  pm_mrk_st_l2disp_to_cmpl_cyc                      
       [cycles from L2 rc disp to l2 rc completion]
  pm_mrk_st_nest                                    
       [Marked store sent to nest]
  pm_mrk_stall_cmplu_cyc                            
       [Number of cycles the marked instruction is experiencing a stall while
        it is next to complete (NTC)]
  pm_mrk_stcx_fail                                  
       [marked stcx failed]
  pm_mrk_stcx_fin                                   
       [Number of marked stcx instructions finished. This includes
        instructions in the speculative path of a branch that may be flushed]
  pm_non_math_flop_cmpl                             
       [Non FLOP operation completed]
  pm_ntc_issue_held_other                           
       [The NTC instruction is being held at dispatch during regular pipeline
        cycles, or because the VSU is busy with multi-cycle instructions, or
        because of a write-back collision with VSU]
  pm_radix_pwc_l1_pde_from_l3                       
       [A Page Directory Entry was reloaded to a level 1 page walk cache from
        the core's L3 data cache]
  pm_radix_pwc_l1_pde_from_l3miss                   
       [A Page Directory Entry was reloaded to a level 1 page walk cache from
        beyond the core's L3 data cache. The source could be
        local/remote/distant memory or another core's cache]
  pm_radix_pwc_l2_pte_from_l3                       
       [A Page Table Entry was reloaded to a level 2 page walk cache from the
        core's L3 data cache. This implies that level 3 and level 4 PWC
        accesses were not necessary for this translation]
  pm_radix_pwc_l3_pde_from_l2                       
       [A Page Directory Entry was reloaded to a level 3 page walk cache from
        the core's L2 data cache]
  pm_radix_pwc_l3_pde_from_l3                       
       [A Page Directory Entry was reloaded to a level 3 page walk cache from
        the core's L3 data cache]
  pm_radix_pwc_l3_pte_from_l2                       
       [A Page Table Entry was reloaded to a level 3 page walk cache from the
        core's L2 data cache. This implies that a level 4 PWC access was not
        necessary for this translation]
  pm_radix_pwc_l3_pte_from_l3                       
       [A Page Table Entry was reloaded to a level 3 page walk cache from the
        core's L3 data cache. This implies that a level 4 PWC access was not
        necessary for this translation]
  pm_radix_pwc_l3_pte_from_l3miss                   
       [A Page Table Entry was reloaded to a level 3 page walk cache from
        beyond the core's L3 data cache. This implies that a level 4 PWC
        access was not necessary for this translation. The source could be
        local/remote/distant memory or another core's cache]
  pm_radix_pwc_l4_pte_from_l2                       
       [A Page Table Entry was reloaded to a level 4 page walk cache from the
        core's L2 data cache. This is the deepest level of PWC possible for a
        translation]
  pm_radix_pwc_l4_pte_from_l3                       
       [A Page Table Entry was reloaded to a level 4 page walk cache from the
        core's L3 data cache. This is the deepest level of PWC possible for a
        translation]
  pm_run_cyc_st_mode                                
       [Cycles run latch is set and core is in ST mode]
  pm_run_purr                                       
       [Run_PURR]
  pm_sp_flop_cmpl                                   
       [SP instruction completed]
  pm_sync_mrk_probe_nop                             
       [Marked probeNops which can cause synchronous interrupts]
  pm_sys_pump_cpred                                 
       [Initial and Final Pump Scope was system pump for all data types
        excluding data prefetch (demand load,inst prefetch,inst fetch,xlate)]
  pm_sys_pump_mpred                                 
       [Final Pump Scope (system) mispredicted. Either the original scope was
        too small (Chip/Group) or the original scope was System and it should
        have been smaller. Counts for all data types excluding data prefetch
        (demand load,inst prefetch,inst fetch,xlate)]
  pm_vector_flop_cmpl                               
       [Vector FP instruction completed]

memory:
  pm_darq1_4_6_entries                              
       [Cycles in which 4, 5, or 6 DARQ1 entries (out of 12) are in use]
  pm_darq1_7_9_entries                              
       [Cycles in which 7 to 9 DARQ1 entries (out of 12) are in use]
  pm_data_chip_pump_cpred                           
       [Initial and Final Pump Scope was chip pump (prediction=correct) for a
        demand load]
  pm_data_from_dl2l3_mod                            
       [The processor's data cache was reloaded with Modified (M) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a demand load]
  pm_data_from_dl2l3_shr                            
       [The processor's data cache was reloaded with Shared (S) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a demand load]
  pm_data_from_l2_disp_conflict_other               
       [The processor's data cache was reloaded from local core's L2 with
        dispatch conflict due to a demand load]
  pm_data_from_l2_mepf                              
       [The processor's data cache was reloaded from local core's L2 hit
        without dispatch conflicts on Mepf state due to a demand load]
  pm_data_from_l2_no_conflict                       
       [The processor's data cache was reloaded from local core's L2 without
        conflict due to a demand load]
  pm_data_from_l3                                   
       [The processor's data cache was reloaded from local core's L3 due to a
        demand load]
  pm_inst_from_rmem                                 
       [The processor's Instruction cache was reloaded from another chip's
        memory on the same Node or Group ( Remote) due to an instruction fetch
        (not prefetch)]
  pm_inst_grp_pump_cpred                            
       [Initial and Final Pump Scope was group pump (prediction=correct) for
        an instruction fetch (demand only)]
  pm_larx_fin                                       
       [Larx finished]
  pm_ld_cmpl                                        
       [count of Loads completed]
  pm_lrq_reject                                     
       [Internal LSU reject from LRQ. Rejects cause the load to go back to
        LRQ, but it stays contained within the LSU once it gets issued. This
        event counts the number of times the LRQ attempts to relaunch an
        instruction after a reject. Any load can suffer multiple rejects]
  pm_lsu_derat_miss                                 
       [DERAT Reloaded due to a DERAT miss]
  pm_lsu_reject_erat_miss                           
       [LSU Reject due to ERAT (up to 4 per cycles)]
  pm_mrk_run_cyc                                    
       [Run cycles in which a marked instruction is in the pipeline]
  pm_mrk_st_cmpl                                    
       [Marked store completed and sent to nest]
  pm_nest_ref_clk                                   
       [Multiply by 4 to obtain the number of PB cycles]
  pm_non_fma_flop_cmpl                              
       [Non FMA instruction completed]
  pm_pmc1_overflow                                  
       [Overflow from counter 1]
  pm_pmc1_rewind                                    
       []
  pm_pmc3_rewind                                    
       [PMC3 rewind event. A rewind happens when a speculative event (such as
        latency or CPI stack) is selected on PMC3 and the stall reason or
        reload source did not match the one programmed in PMC3. When this
        occurs, the count in PMC3 will not change]
  pm_run_spurr                                      
       [Run SPURR]
  pm_sync_mrk_l2hit                                 
       [Marked L2 Hits that can throw a synchronous interrupt]

other:
  pm_any_thrd_run_cyc                               
       [Cycles in which at least one thread has the run latch set]
  pm_back_br_cmpl                                   
       [Branch instruction completed with a target address less than current
        instruction address]
  pm_bank_conflict                                  
       [Read blocked due to interleave conflict. The ifar logic will detect an
        interleave conflict and kill the data that was read that cycle]
  pm_bfu_busy                                       
       [Cycles in which all 4 Binary Floating Point units are busy. The BFU is
        running at capacity]
  pm_br_cmpl                                        
       [Any Branch instruction completed]
  pm_br_corect_pred_taken_cmpl                      
       [Conditional Branch Completed in which the HW correctly predicted the
        direction as taken. Counted at completion time]
  pm_br_mpred_ccache                                
       [Conditional Branch Completed that was Mispredicted due to the Count
        Cache Target Prediction]
  pm_br_mpred_lstack                                
       [Conditional Branch Completed that was Mispredicted due to the Link
        Stack Target Prediction]
  pm_br_mpred_pcache                                
       [Conditional Branch Completed that was Mispredicted due to pattern
        cache prediction]
  pm_br_mpred_taken_cr                              
       [A Conditional Branch that resolved to taken was mispredicted as not
        taken (due to the BHT Direction Prediction)]
  pm_br_mpred_taken_ta                              
       [Conditional Branch Completed that was Mispredicted due to the Target
        Address Prediction from the Count Cache or Link Stack. Only XL-form
        branches that resolved Taken set this event]
  pm_br_pred                                        
       [Conditional Branch Executed in which the HW predicted the Direction or
        Target. Includes taken and not taken and is counted at execution time]
  pm_br_pred_ccache                                 
       [Conditional Branch Completed that used the Count Cache for Target
        Prediction]
  pm_br_pred_lstack                                 
       [Conditional Branch Completed that used the Link Stack for Target
        Prediction]
  pm_br_pred_pcache                                 
       [Conditional branch completed that used pattern cache prediction]
  pm_br_pred_ta                                     
       [Conditional Branch Completed that had its target address predicted.
        Only XL-form branches set this event. This equal the sum of CCACHE,
        LSTACK, and PCACHE]
  pm_br_pred_taken_cr                               
       [Conditional Branch that had its direction predicted. I-form branches
        do not set this event. In addition, B-form branches which do not use
        the BHT do not set this event - these are branches with BO-field set
        to 'always taken' and branches]
  pm_br_uncond                                      
       [Unconditional Branch Completed. HW branch prediction was not used for
        this branch. This can be an I-form branch, a B-form branch with
        BO-field set to branch always, or a B-form branch which was covenrted
        to a Resolve]
  pm_btac_bad_result                                
       [BTAC thinks branch will be taken but it is either predicted not-taken
        by the BHT, or the target address is wrong (less common). In both
        cases, a redirect will happen]
  pm_btac_good_result                               
       [BTAC predicts a taken branch and the BHT agrees, and the target
        address is correct]
  pm_clb_held                                       
       [CLB (control logic block - indicates quadword fetch block) Hold: Any
        Reason]
  pm_cmplu_stall_any_sync                           
       [Cycles in which the NTC sync instruction (isync, lwsync or hwsync) is
        not allowed to complete]
  pm_cmplu_stall_dmiss_l3miss                       
       [Completion stall due to cache miss resolving missed the L3]
  pm_cmplu_stall_dmiss_lmem                         
       [Completion stall due to cache miss that resolves in local memory]
  pm_cmplu_stall_exec_unit                          
       [Completion stall due to execution units (FXU/VSU/CRU)]
  pm_cmplu_stall_lrq_full                           
       [Finish stall because the NTF instruction was a load that was held in
        LSAQ (load-store address queue) because the LRQ (load-reorder queue)
        was full]
  pm_cmplu_stall_nested_tbegin                      
       [Completion stall because the ISU is updating the TEXASR to keep track
        of the nested tbegin. This is a short delay, and it includes ROT]
  pm_cmplu_stall_srq_full                           
       [Finish stall because the NTF instruction was a store that was held in
        LSAQ because the SRQ was full]
  pm_cmplu_stall_thrd                               
       [Completion Stalled because the thread was blocked]
  pm_co0_busy                                       
       [CO mach 0 Busy. Used by PMU to sample ave CO lifetime (mach0 used as
        sample point)]
  pm_co_disp_fail                                   
       [CO dispatch failed due to all CO machines being busy]
  pm_co_tm_sc_footprint                             
       [L2 did a cleanifdirty CO to the L3 (ie created an SC line in the L3)
        OR L2 TM_store hit dirty HPC line and L3 indicated SC line formed in
        L3 on RDR bus]
  pm_co_usage                                       
       [Continuous 16 cycle (2to1) window where this signals rotates thru
        sampling each CO machine busy. PMU uses this wave to then do 16 cyc
        count to sample total number of machs running]
  pm_darq1_10_12_entries                            
       [Cycles in which 10 or more DARQ1 entries (out of 12) are in use]
  pm_data_from_l2_disp_conflict_ldhitst             
       [The processor's data cache was reloaded from local core's L2 with load
        hit store conflict due to a demand load]
  pm_data_from_l3_disp_conflict                     
       [The processor's data cache was reloaded from local core's L3 with
        dispatch conflict due to a demand load]
  pm_data_from_ll4                                  
       [The processor's data cache was reloaded from the local chip's L4 cache
        due to a demand load]
  pm_data_from_rl2l3_shr                            
       [The processor's data cache was reloaded with Shared (S) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a demand load]
  pm_data_grp_pump_cpred                            
       [Initial and Final Pump Scope was group pump (prediction=correct) for a
        demand load]
  pm_data_store                                     
       [All ops that drain from s2q to L2 containing data]
  pm_data_tablewalk_cyc                             
       [Data Tablewalk Cycles. Could be 1 or 2 active tablewalks. Includes
        data prefetches]
  pm_dc_dealloc_no_conf                             
       [A demand load referenced a line in an active fuzzy prefetch stream.
        The stream could have been allocated through the hardware prefetch
        mechanism or through software.Fuzzy stream confirm (out of order
        effects, or pf cant keep up)]
  pm_dc_pref_conf                                   
       [A demand load referenced a line in an active prefetch stream. The
        stream could have been allocated through the hardware prefetch
        mechanism or through software. Includes forwards and backwards streams]
  pm_dc_pref_cons_alloc                             
       [Prefetch stream allocated in the conservative phase by either the
        hardware prefetch mechanism or software prefetch. The sum of this pair
        subtracted from the total number of allocs will give the total allocs
        in normal phase]
  pm_dc_pref_fuzzy_conf                             
       [A demand load referenced a line in an active fuzzy prefetch stream.
        The stream could have been allocated through the hardware prefetch
        mechanism or through software.Fuzzy stream confirm (out of order
        effects, or pf cant keep up)]
  pm_dc_pref_hw_alloc                               
       [Prefetch stream allocated by the hardware prefetch mechanism]
  pm_dc_pref_strided_conf                           
       [A demand load referenced a line in an active strided prefetch stream.
        The stream could have been allocated through the hardware prefetch
        mechanism or through software]
  pm_dc_pref_sw_alloc                               
       [Prefetch stream allocated by software prefetching]
  pm_dc_pref_xcons_alloc                            
       [Prefetch stream allocated in the Ultra conservative phase by either
        the hardware prefetch mechanism or software prefetch]
  pm_decode_fusion_const_gen                        
       [32-bit constant generation]
  pm_decode_fusion_ld_st_disp                       
       [32-bit displacement D-form and 16-bit displacement X-form]
  pm_decode_hold_ict_full                           
       [Counts the number of cycles in which the IFU was not able to decode
        and transmit one or more instructions because all itags were in use.
        This means the ICT is full for this thread]
  pm_derat_miss_16g_1g                              
       [Data ERAT Miss (Data TLB Access) page size 16G (hpt mode) or 1G (radix
        mode)]
  pm_disp_clb_held_bal                              
       [Dispatch/CLB Hold: Balance Flush]
  pm_disp_clb_held_sb                               
       [Dispatch/CLB Hold: Scoreboard]
  pm_disp_clb_held_tlbie                            
       [Dispatch Hold: Due to TLBIE]
  pm_disp_held_issq_full                            
       [Dispatch held due to Issue q full. Includes issue queue and branch
        queue]
  pm_disp_held_tbegin                               
       [This outer tbegin transaction cannot be dispatched until the previous
        tend instruction completes]
  pm_dpteg_from_l2_mepf                             
       [A Page Table Entry was loaded into the TLB from local core's L2 hit
        without dispatch conflicts on Mepf state. due to a data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_dpteg_from_l2miss                              
       [A Page Table Entry was loaded into the TLB from a location other than
        the local core's L2 due to a data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_dpteg_from_l31_eco_mod                         
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another core's ECO L3 on the same chip due to a data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_dpteg_from_off_chip_cache                      
       [A Page Table Entry was loaded into the TLB either shared or modified
        data from another core's L2/L3 on a different chip (remote or distant)
        due to a data side request. When using Radix Page Translation, this
        count excludes PDE reloads. Only PTE reloads are included]
  pm_dpteg_from_on_chip_cache                       
       [A Page Table Entry was loaded into the TLB either shared or modified
        data from another core's L2/L3 on the same chip due to a data side
        request. When using Radix Page Translation, this count excludes PDE
        reloads. Only PTE reloads are included]
  pm_dpteg_from_rl4                                 
       [A Page Table Entry was loaded into the TLB from another chip's L4 on
        the same Node or Group ( Remote) due to a data side request. When
        using Radix Page Translation, this count excludes PDE reloads. Only
        PTE reloads are included]
  pm_dside_l2memacc                                 
       [Valid when first beat of data comes in for an D-side fetch where data
        came EXCLUSIVELY from memory (excluding hpcread64 accesses), i.e.,
        total memory accesses by RCs]
  pm_dside_mru_touch                                
       [D-side L2 MRU touch commands sent to the L2]
  pm_dside_other_64b_l2memacc                       
       [Valid when first beat of data comes in for an D-side fetch where data
        came EXCLUSIVELY from memory that was for hpc_read64, (RC had to fetch
        other 64B of a line from MC) i.e., number of times RC had to go to
        memory to get 'missing' 64B]
  pm_eat_force_mispred                              
       [XL-form branch was mispredicted due to the predicted target address
        missing from EAT. The EAT forces a mispredict in this case since there
        is no predicated target to validate. This is a rare case that may
        occur when the EAT is full and a branch is issued]
  pm_eat_full_cyc                                   
       [Cycles No room in EAT]
  pm_ee_off_ext_int                                 
       [CyclesMSR[EE] is off and external interrupts are active]
  pm_flush_disp                                     
       [Dispatch flush]
  pm_flush_disp_sb                                  
       [Dispatch Flush: Scoreboard]
  pm_flush_disp_tlbie                               
       [Dispatch Flush: TLBIE]
  pm_flush_hb_restore_cyc                           
       [Cycles in which no new instructions can be dispatched to the ICT after
        a flush. History buffer recovery]
  pm_flush_lsu                                      
       [LSU flushes. Includes all lsu flushes]
  pm_flush_mpred                                    
       [Branch mispredict flushes. Includes target and address misprecition]
  pm_fma_cmpl                                       
       [two flops operation completed (fmadd, fnmadd, fmsub, fnmsub) Scalar
        instructions only. ]
  pm_grp_pump_mpred_rty                             
       [Final Pump Scope (Group) ended up larger than Initial Pump Scope
        (Chip) for all data types excluding data prefetch (demand load,inst
        prefetch,inst fetch,xlate)]
  pm_hwsync                                         
       []
  pm_ibuf_full_cyc                                  
       [Cycles No room in ibuff]
  pm_ic_demand_l2_bht_redirect                      
       [L2 I cache demand request due to BHT redirect, branch redirect ( 2
        bubbles 3 cycles)]
  pm_ic_demand_l2_br_redirect                       
       [L2 I cache demand request due to branch Mispredict ( 15 cycle path)]
  pm_ic_demand_req                                  
       [Demand Instruction fetch request]
  pm_ic_invalidate                                  
       [Ic line invalidated]
  pm_ic_miss_icbi                                   
       [threaded version, IC Misses where we got EA dir hit but no sector
        valids were on. ICBI took line out]
  pm_ic_pref_cancel_hit                             
       [Prefetch Canceled due to icache hit]
  pm_ic_pref_cancel_l2                              
       [L2 Squashed a demand or prefetch request]
  pm_ic_pref_cancel_page                            
       [Prefetch Canceled due to page boundary]
  pm_ic_pref_req                                    
       [Instruction prefetch requests]
  pm_ic_pref_write                                  
       [Instruction prefetch written into IL1]
  pm_ic_reload_private                              
       [Reloading line was brought in private for a specific thread. Most
        lines are brought in shared for all eight threads. If RA does not
        match then invalidates and then brings it shared to other thread. In
        P7 line brought in private , then line was invalidat]
  pm_ict_noslot_disp_held_hb_full                   
       [Ict empty for this thread due to dispatch holds because the History
        Buffer was full. Could be GPR/VSR/VMR/FPR/CR/XVF; CR; XVF
        (XER/VSCR/FPSCR)]
  pm_ict_noslot_disp_held_issq                      
       [Ict empty for this thread due to dispatch hold on this thread due to
        Issue q full, BRQ full, XVCF Full, Count cache, Link, Tar full]
  pm_ierat_reload_4k                                
       [IERAT reloaded (after a miss) for 4K pages]
  pm_ierat_reload_64k                               
       [IERAT Reloaded (Miss) for a 64k page]
  pm_inst_disp                                      
       [# PPC Dispatched]
  pm_inst_from_l1                                   
       [Instruction fetches from L1. L1 instruction hit]
  pm_inst_from_l21_mod                              
       [The processor's Instruction cache was reloaded with Modified (M) data
        from another core's L2 on the same chip due to an instruction fetch
        (not prefetch)]
  pm_inst_from_l2_mepf                              
       [The processor's Instruction cache was reloaded from local core's L2
        hit without dispatch conflicts on Mepf state. due to an instruction
        fetch (not prefetch)]
  pm_inst_from_l31_eco_mod                          
       [The processor's Instruction cache was reloaded with Modified (M) data
        from another core's ECO L3 on the same chip due to an instruction
        fetch (not prefetch)]
  pm_inst_from_lmem                                 
       [The processor's Instruction cache was reloaded from the local chip's
        Memory due to an instruction fetch (not prefetch)]
  pm_inst_from_off_chip_cache                       
       [The processor's Instruction cache was reloaded either shared or
        modified data from another core's L2/L3 on a different chip (remote or
        distant) due to an instruction fetch (not prefetch)]
  pm_inst_grp_pump_mpred                            
       [Final Pump Scope (Group) ended up either larger or smaller than
        Initial Pump Scope for an instruction fetch (demand only)]
  pm_inst_imc_match_cmpl                            
       [IMC Match Count]
  pm_ipteg_from_dl2l3_shr                           
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a instruction side request]
  pm_ipteg_from_dl4                                 
       [A Page Table Entry was loaded into the TLB from another chip's L4 on a
        different Node or Group (Distant) due to a instruction side request]
  pm_ipteg_from_dmem                                
       [A Page Table Entry was loaded into the TLB from another chip's memory
        on the same Node or Group (Distant) due to a instruction side request]
  pm_ipteg_from_l2_no_conflict                      
       [A Page Table Entry was loaded into the TLB from local core's L2
        without conflict due to a instruction side request]
  pm_ipteg_from_l3_disp_conflict                    
       [A Page Table Entry was loaded into the TLB from local core's L3 with
        dispatch conflict due to a instruction side request]
  pm_ipteg_from_ll4                                 
       [A Page Table Entry was loaded into the TLB from the local chip's L4
        cache due to a instruction side request]
  pm_ipteg_from_lmem                                
       [A Page Table Entry was loaded into the TLB from the local chip's
        Memory due to a instruction side request]
  pm_iside_disp                                     
       [All I-side-instruction-fetch dispatch attempts for this thread]
  pm_iside_disp_fail_addr                           
       [All I-side-instruction-fetch dispatch attempts for this thread that
        failed due to an address collision conflict with an L2 machine already
        working on this line (e.g. ld-hit-stq or RC/CO/SN machines)]
  pm_iside_disp_fail_other                          
       [All I-side-instruction-fetch dispatch attempts for this thread that
        failed due to reasons other than an address collision conflict with an
        L2 machine (e.g. no available RC/CO machines)]
  pm_iside_l2memacc                                 
       [Valid when first beat of data comes in for an I-side fetch where data
        came from memory]
  pm_iside_mru_touch                                
       [I-side L2 MRU touch sent to L2 for this thread I-side L2 MRU touch
        commands sent to the L2 for this thread]
  pm_islb_miss                                      
       [Instruction SLB Miss - Total of all segment sizes]
  pm_isq_0_8_entries                                
       [Cycles in which 8 or less Issue Queue entries are in use. This is a
        shared event, not per thread]
  pm_isu0_iss_hold_all                              
       [All ISU rejects]
  pm_isu1_iss_hold_all                              
       [All ISU rejects]
  pm_isu2_iss_hold_all                              
       [All ISU rejects]
  pm_isu3_iss_hold_all                              
       [All ISU rejects]
  pm_isync                                          
       [Isync completion count per thread]
  pm_l1_demand_write                                
       [Instruction Demand sectors written into IL1]
  pm_l1_pref                                        
       [A data line was written to the L1 due to a hardware or software
        prefetch]
  pm_l1_sw_pref                                     
       [Software L1 Prefetches, including SW Transient Prefetches]
  pm_l1pf_l2memacc                                  
       [Valid when first beat of data comes in for an L1PF where data came
        from memory]
  pm_l2_castout_mod                                 
       [L2 Castouts - Modified (M,Mu,Me)]
  pm_l2_castout_shr                                 
       [L2 Castouts - Shared (Tx,Sx)]
  pm_l2_chip_pump                                   
       [RC requests that were local (aka chip) pump attempts]
  pm_l2_dc_inv                                      
       [D-cache invalidates sent over the reload bus to the core]
  pm_l2_disp_all_l2miss                             
       [All successful D-side-Ld/St or I-side-instruction-fetch dispatches for
        this thread that were an L2 miss]
  pm_l2_group_pump                                  
       [RC requests that were on group (aka nodel) pump attempts]
  pm_l2_grp_guess_correct                           
       [L2 guess grp (GS or NNS) and guess was correct (data intra-group AND
        ^on-chip)]
  pm_l2_grp_guess_wrong                             
       [L2 guess grp (GS or NNS) and guess was not correct (ie data on-chip OR
        beyond-group)]
  pm_l2_ic_inv                                      
       [I-cache Invalidates sent over the realod bus to the core]
  pm_l2_inst                                        
       [All successful I-side-instruction-fetch (e.g. i-demand, i-prefetch)
        dispatches for this thread]
  pm_l2_inst_miss                                   
       [All successful I-side-instruction-fetch (e.g. i-demand, i-prefetch)
        dispatches for this thread that were an L2 miss]
  pm_l2_ld                                          
       [All successful D-side Load dispatches for this thread (L2 miss + L2
        hits)]
  pm_l2_ld_disp                                     
       [All successful D-side-Ld or I-side-instruction-fetch dispatches for
        this thread]
  pm_l2_ld_hit                                      
       [All successful D-side-Ld or I-side-instruction-fetch dispatches for
        this thread that were L2 hits]
  pm_l2_ld_miss                                     
       [All successful D-Side Load dispatches that were an L2 miss for this
        thread]
  pm_l2_ld_miss_128b                                
       [All successful D-side load dispatches that were an L2 miss (NOT
        Sx,Tx,Mx) for this thread and the RC calculated the request should be
        for 128B (i.e., M=0)]
  pm_l2_ld_miss_64b                                 
       [All successful D-side load dispatches that were an L2 miss (NOT
        Sx,Tx,Mx) for this thread and the RC calculated the request should be
        for 64B(i.e., M=1)]
  pm_l2_loc_guess_correct                           
       [L2 guess local (LNS) and guess was correct (ie data local)]
  pm_l2_loc_guess_wrong                             
       [L2 guess local (LNS) and guess was not correct (ie data not on chip)]
  pm_l2_rc_st_done                                  
       [Read-claim machine did store to line that was in Tx or Sx (Tagged or
        Shared state)]
  pm_l2_rcld_disp                                   
       [All D-side-Ld or I-side-instruction-fetch dispatch attempts for this
        thread]
  pm_l2_rcld_disp_fail_addr                         
       [All D-side-Ld or I-side-instruction-fetch dispatch attempts for this
        thread that failed due to an address collision conflicts with an L2
        machines already working on this line (e.g. ld-hit-stq or
        Read-claim/Castout/Snoop machines)]
  pm_l2_rcld_disp_fail_other                        
       [All D-side-Ld or I-side-instruction-fetch dispatch attempts for this
        thread that failed due to reasons other than an address collision
        conflicts with an L2 machines (e.g. Read-Claim/Snoop machine not
        available)]
  pm_l2_rcst_disp                                   
       [All D-side store dispatch attempts for this thread]
  pm_l2_rcst_disp_fail_addr                         
       [All D-side store dispatch attempts for this thread that failed due to
        address collision with RC/CO/SN/SQ]
  pm_l2_rcst_disp_fail_other                        
       [All D-side store dispatch attempts for this thread that failed due to
        reason other than address collision]
  pm_l2_rty_ld                                      
       [RC retries on PB for any load from core (excludes DCBFs)]
  pm_l2_rty_st                                      
       [RC retries on PB for any store from core (excludes DCBFs)]
  pm_l2_sn_m_rd_done                                
       [Snoop dispatched for a read and was M (true M)]
  pm_l2_sn_m_wr_done                                
       [SNP dispatched for a write and was M (true M); for DMA cacheinj this
        will pulse if rty/push is required (won't pulse if cacheinj is
        accepted)]
  pm_l2_sn_sx_i_done                                
       [Snoop dispatched and went from Sx to Ix]
  pm_l2_st                                          
       [All successful D-side store dispatches for this thread (L2 miss + L2
        hits)]
  pm_l2_st_disp                                     
       [All successful D-side store dispatches for this thread]
  pm_l2_st_hit                                      
       [All successful D-side store dispatches for this thread that were L2
        hits]
  pm_l2_st_miss                                     
       [All successful D-Side Store dispatches that were an L2 miss for this
        thread]
  pm_l2_st_miss_128b                                
       [All successful D-side store dispatches that were an L2 miss (NOT
        Sx,Tx,Mx) for this thread and the RC calculated the request should be
        for 128B (i.e., M=0)]
  pm_l2_st_miss_64b                                 
       [All successful D-side store dispatches that were an L2 miss (NOT
        Sx,Tx,Mx) for this thread and the RC calculated the request should be
        for 64B (i.e., M=1)]
  pm_l2_sys_guess_correct                           
       [L2 guess system (VGS or RNS) and guess was correct (ie data
        beyond-group)]
  pm_l2_sys_guess_wrong                             
       [L2 guess system (VGS or RNS) and guess was not correct (ie data
        ^beyond-group)]
  pm_l2_sys_pump                                    
       [RC requests that were system pump attempts]
  pm_l3_ci_hit                                      
       [L3 Castins Hit (total count)]
  pm_l3_ci_miss                                     
       [L3 castins miss (total count)]
  pm_l3_ci_usage                                    
       [Rotating sample of 16 CI or CO actives]
  pm_l3_cinj                                        
       [L3 castin of cache inject]
  pm_l3_co                                          
       [L3 castout occurring (does not include casthrough or log writes
        (cinj/dmaw))]
  pm_l3_co0_busy                                    
       [Lifetime, sample of CO machine 0 valid]
  pm_l3_co_l31                                      
       [L3 CO to L3.1 OR of port 0 and 1 (lossy = may undercount if two cresps
        come in the same cyc)]
  pm_l3_co_lco                                      
       [Total L3 COs occurred on LCO L3.1 (good cresp, may end up in mem on a
        retry)]
  pm_l3_co_mem                                      
       [L3 CO to memory OR of port 0 and 1 (lossy = may undercount if two
        cresp come in the same cyc)]
  pm_l3_co_mepf                                     
       [L3 CO of line in Mep state (includes casthrough to memory). The Mepf
        state indicates that a line was brought in to satisfy an L3 prefetch
        request]
  pm_l3_grp_guess_correct                           
       [Prefetch scope predictor selected GS or NNS and was correct]
  pm_l3_grp_guess_wrong_high                        
       [Prefetch scope predictor selected GS or NNS, but was wrong because
        scope was VGS or RNS]
  pm_l3_grp_guess_wrong_low                         
       [Prefetch scope predictor selected GS or NNS, but was wrong because
        scope was LNS]
  pm_l3_hit                                         
       [L3 Hits (L2 miss hitting L3, including data/instrn/xlate)]
  pm_l3_l2_co_hit                                   
       [L2 CO hits]
  pm_l3_l2_co_miss                                  
       [L2 CO miss]
  pm_l3_lat_ci_hit                                  
       [L3 Lateral Castins Hit]
  pm_l3_lat_ci_miss                                 
       [L3 Lateral Castins Miss]
  pm_l3_ld_hit                                      
       [L3 Hits for demand LDs]
  pm_l3_ld_miss                                     
       [L3 Misses for demand LDs]
  pm_l3_ld_pref                                     
       [L3 load prefetch, sourced from a hardware or software stream, was sent
        to the nest]
  pm_l3_loc_guess_correct                           
       [Prefetch scope predictor selected LNS and was correct]
  pm_l3_loc_guess_wrong                             
       [Prefetch scope predictor selected LNS, but was wrong]
  pm_l3_miss                                        
       [L3 Misses (L2 miss also missing L3, including data/instrn/xlate)]
  pm_l3_p0_co_l31                                   
       [L3 CO to L3.1 (LCO) port 0 with or without data]
  pm_l3_p0_co_mem                                   
       [L3 CO to memory port 0 with or without data]
  pm_l3_p0_co_rty                                   
       [L3 CO received retry port 0 (memory only), every retry counted]
  pm_l3_p0_grp_pump                                 
       [L3 PF sent with grp scope port 0, counts even retried requests]
  pm_l3_p0_lco_data                                 
       [LCO sent with data port 0]
  pm_l3_p0_lco_no_data                              
       [Dataless L3 LCO sent port 0]
  pm_l3_p0_lco_rty                                  
       [L3 initiated LCO received retry on port 0 (can try 4 times)]
  pm_l3_p0_node_pump                                
       [L3 PF sent with nodal scope port 0, counts even retried requests]
  pm_l3_p0_pf_rty                                   
       [L3 PF received retry port 0, every retry counted]
  pm_l3_p0_sys_pump                                 
       [L3 PF sent with sys scope port 0, counts even retried requests]
  pm_l3_p1_co_l31                                   
       [L3 CO to L3.1 (LCO) port 1 with or without data]
  pm_l3_p1_co_mem                                   
       [L3 CO to memory port 1 with or without data]
  pm_l3_p1_co_rty                                   
       [L3 CO received retry port 1 (memory only), every retry counted]
  pm_l3_p1_grp_pump                                 
       [L3 PF sent with grp scope port 1, counts even retried requests]
  pm_l3_p1_lco_data                                 
       [LCO sent with data port 1]
  pm_l3_p1_lco_no_data                              
       [Dataless L3 LCO sent port 1]
  pm_l3_p1_lco_rty                                  
       [L3 initiated LCO received retry on port 1 (can try 4 times)]
  pm_l3_p1_node_pump                                
       [L3 PF sent with nodal scope port 1, counts even retried requests]
  pm_l3_p1_pf_rty                                   
       [L3 PF received retry port 1, every retry counted]
  pm_l3_p1_sys_pump                                 
       [L3 PF sent with sys scope port 1, counts even retried requests]
  pm_l3_p2_co_rty                                   
       [L3 CO received retry port 2 (memory only), every retry counted]
  pm_l3_p2_lco_rty                                  
       [L3 initiated LCO received retry on port 2 (can try 4 times)]
  pm_l3_p2_pf_rty                                   
       [L3 PF received retry port 2, every retry counted]
  pm_l3_p3_co_rty                                   
       [L3 CO received retry port 3 (memory only), every retry counted]
  pm_l3_p3_lco_rty                                  
       [L3 initiated LCO received retry on port 3 (can try 4 times)]
  pm_l3_p3_pf_rty                                   
       [L3 PF received retry port 3, every retry counted]
  pm_l3_pf0_busy                                    
       [Lifetime, sample of PF machine 0 valid]
  pm_l3_pf_hit_l3                                   
       [L3 PF hit in L3 (abandoned)]
  pm_l3_pf_miss_l3                                  
       [L3 PF missed in L3]
  pm_l3_pf_off_chip_cache                           
       [L3 PF from Off chip cache]
  pm_l3_pf_off_chip_mem                             
       [L3 PF from Off chip memory]
  pm_l3_pf_on_chip_cache                            
       [L3 PF from On chip cache]
  pm_l3_pf_on_chip_mem                              
       [L3 PF from On chip memory]
  pm_l3_pf_usage                                    
       [Rotating sample of 32 PF actives]
  pm_l3_rd0_busy                                    
       [Lifetime, sample of RD machine 0 valid]
  pm_l3_rd_usage                                    
       [Rotating sample of 16 RD actives]
  pm_l3_sn0_busy                                    
       [Lifetime, sample of snooper machine 0 valid]
  pm_l3_sn_usage                                    
       [Rotating sample of 16 snoop valids]
  pm_l3_sw_pref                                     
       [L3 load prefetch, sourced from a software prefetch stream, was sent to
        the nest]
  pm_l3_sys_guess_correct                           
       [Prefetch scope predictor selected VGS or RNS and was correct]
  pm_l3_sys_guess_wrong                             
       [Prefetch scope predictor selected VGS or RNS, but was wrong]
  pm_l3_trans_pf                                    
       [L3 Transient prefetch received from L2]
  pm_l3_wi0_busy                                    
       [Rotating sample of 8 WI valid (duplicate)]
  pm_l3_wi_usage                                    
       [Lifetime, sample of Write Inject machine 0 valid]
  pm_ld_miss_l1_fin                                 
       [Number of load instructions that finished with an L1 miss. Note that
        even if a load spans multiple slices this event will increment only
        once per load op]
  pm_ld_ref_l1                                      
       [All L1 D cache load references counted at finish, gated by reject]
  pm_link_stack_correct                             
       [Link stack predicts right address]
  pm_link_stack_invalid_ptr                         
       [It is most often caused by certain types of flush where the pointer is
        not available. Can result in the data in the link stack becoming
        unusable]
  pm_link_stack_wrong_add_pred                      
       [Link stack predicts wrong address, because of link stack design
        limitation or software violating the coding conventions]
  pm_lmq_merge                                      
       [A demand miss collides with a prefetch for the same line]
  pm_ls0_dc_collisions                              
       [Read-write data cache collisions]
  pm_ls0_erat_miss_pref                             
       [LS0 Erat miss due to prefetch]
  pm_ls0_launch_held_pref                           
       [Number of times a load or store instruction was unable to
        launch/relaunch because a high priority prefetch used that relaunch
        cycle]
  pm_ls0_ld_vector_fin                              
       [LS0 finished load vector op]
  pm_ls0_pte_tablewalk_cyc                          
       [Cycles when a tablewalk is pending on this thread on table 0]
  pm_ls0_tm_disallow                                
       [A TM-ineligible instruction tries to execute inside a transaction and
        the LSU disallows it]
  pm_ls0_unaligned_ld                               
       [Load instructions whose data crosses a double-word boundary, which
        causes it to require an additional slice than than what normally would
        be required of the load of that size. If the load wraps from slice 3
        to slice 0, thee is an additional 3-cycle penalty]
  pm_ls0_unaligned_st                               
       [Store instructions whose data crosses a double-word boundary, which
        causes it to require an additional slice than than what normally would
        be required of the Store of that size. If the Store wraps from slice 3
        to slice 0, thee is an additional 3-cycle penalty]
  pm_ls1_dc_collisions                              
       [Read-write data cache collisions]
  pm_ls1_erat_miss_pref                             
       [LS1 Erat miss due to prefetch]
  pm_ls1_launch_held_pref                           
       [Number of times a load or store instruction was unable to
        launch/relaunch because a high priority prefetch used that relaunch
        cycle]
  pm_ls1_ld_vector_fin                              
       [LS1 finished load vector op]
  pm_ls1_pte_tablewalk_cyc                          
       [Cycles when a tablewalk is pending on this thread on table 1]
  pm_ls1_tm_disallow                                
       [A TM-ineligible instruction tries to execute inside a transaction and
        the LSU disallows it]
  pm_ls1_unaligned_ld                               
       [Load instructions whose data crosses a double-word boundary, which
        causes it to require an additional slice than than what normally would
        be required of the load of that size. If the load wraps from slice 3
        to slice 0, thee is an additional 3-cycle penalty]
  pm_ls1_unaligned_st                               
       [Store instructions whose data crosses a double-word boundary, which
        causes it to require an additional slice than than what normally would
        be required of the Store of that size. If the Store wraps from slice 3
        to slice 0, thee is an additional 3-cycle penalty]
  pm_ls2_dc_collisions                              
       [Read-write data cache collisions]
  pm_ls2_erat_miss_pref                             
       [LS0 Erat miss due to prefetch]
  pm_ls2_ld_vector_fin                              
       [LS2 finished load vector op]
  pm_ls2_tm_disallow                                
       [A TM-ineligible instruction tries to execute inside a transaction and
        the LSU disallows it]
  pm_ls2_unaligned_ld                               
       [Load instructions whose data crosses a double-word boundary, which
        causes it to require an additional slice than than what normally would
        be required of the load of that size. If the load wraps from slice 3
        to slice 0, thee is an additional 3-cycle penalty]
  pm_ls2_unaligned_st                               
       [Store instructions whose data crosses a double-word boundary, which
        causes it to require an additional slice than than what normally would
        be required of the Store of that size. If the Store wraps from slice 3
        to slice 0, thee is an additional 3-cycle penalty]
  pm_ls3_dc_collisions                              
       [Read-write data cache collisions]
  pm_ls3_erat_miss_pref                             
       [LS1 Erat miss due to prefetch]
  pm_ls3_ld_vector_fin                              
       [LS3 finished load vector op]
  pm_ls3_tm_disallow                                
       [A TM-ineligible instruction tries to execute inside a transaction and
        the LSU disallows it]
  pm_ls3_unaligned_ld                               
       [Load instructions whose data crosses a double-word boundary, which
        causes it to require an additional slice than than what normally would
        be required of the load of that size. If the load wraps from slice 3
        to slice 0, thee is an additional 3-cycle penalty]
  pm_ls3_unaligned_st                               
       [Store instructions whose data crosses a double-word boundary, which
        causes it to require an additional slice than than what normally would
        be required of the Store of that size. If the Store wraps from slice 3
        to slice 0, thee is an additional 3-cycle penalty]
  pm_lsu0_1_lrqf_full_cyc                           
       [Counts the number of cycles the LRQF is full. LRQF is the queue that
        holds loads between finish and completion. If it fills up,
        instructions stay in LRQ until completion, potentially backing up the
        LRQ]
  pm_lsu0_erat_hit                                  
       [Primary ERAT hit. There is no secondary ERAT]
  pm_lsu0_false_lhs                                 
       [False LHS match detected]
  pm_lsu0_l1_cam_cancel                             
       [ls0 l1 tm cam cancel]
  pm_lsu0_ldmx_fin                                  
       [New P9 instruction LDMX. The definition of this new PMU event is (from
        the ldmx RFC02491): The thread has executed an ldmx instruction that
        accessed a doubleword that contains an effective address within an
        enabled section of the Load Monitored region. This event, therefore,
        should not occur if the FSCR has disabled the load monitored facility
        (FSCR[52]) or disabled the EBB facility (FSCR[56])]
  pm_lsu0_lmq_s0_valid                              
       [Slot 0 of LMQ valid]
  pm_lsu0_lrq_s0_valid_cyc                          
       [Slot 0 of LRQ valid]
  pm_lsu0_srq_s0_valid_cyc                          
       [Slot 0 of SRQ valid]
  pm_lsu0_store_reject                              
       [All internal store rejects cause the instruction to go back to the SRQ
        and go to sleep until woken up to try again after the condition has
        been met]
  pm_lsu0_tm_l1_hit                                 
       [Load tm hit in L1]
  pm_lsu0_tm_l1_miss                                
       [Load tm L1 miss]
  pm_lsu1_erat_hit                                  
       [Primary ERAT hit. There is no secondary ERAT]
  pm_lsu1_false_lhs                                 
       [False LHS match detected]
  pm_lsu1_l1_cam_cancel                             
       [ls1 l1 tm cam cancel]
  pm_lsu1_ldmx_fin                                  
       [New P9 instruction LDMX. The definition of this new PMU event is (from
        the ldmx RFC02491): The thread has executed an ldmx instruction that
        accessed a doubleword that contains an effective address within an
        enabled section of the Load Monitored region. This event, therefore,
        should not occur if the FSCR has disabled the load monitored facility
        (FSCR[52]) or disabled the EBB facility (FSCR[56])]
  pm_lsu1_store_reject                              
       [All internal store rejects cause the instruction to go back to the SRQ
        and go to sleep until woken up to try again after the condition has
        been met]
  pm_lsu1_tm_l1_hit                                 
       [Load tm hit in L1]
  pm_lsu1_tm_l1_miss                                
       [Load tm L1 miss]
  pm_lsu2_3_lrqf_full_cyc                           
       [Counts the number of cycles the LRQF is full. LRQF is the queue that
        holds loads between finish and completion. If it fills up,
        instructions stay in LRQ until completion, potentially backing up the
        LRQ]
  pm_lsu2_erat_hit                                  
       [Primary ERAT hit. There is no secondary ERAT]
  pm_lsu2_false_lhs                                 
       [False LHS match detected]
  pm_lsu2_l1_cam_cancel                             
       [ls2 l1 tm cam cancel]
  pm_lsu2_ldmx_fin                                  
       [New P9 instruction LDMX. The definition of this new PMU event is (from
        the ldmx RFC02491): The thread has executed an ldmx instruction that
        accessed a doubleword that contains an effective address within an
        enabled section of the Load Monitored region. This event, therefore,
        should not occur if the FSCR has disabled the load monitored facility
        (FSCR[52]) or disabled the EBB facility (FSCR[56])]
  pm_lsu2_store_reject                              
       [All internal store rejects cause the instruction to go back to the SRQ
        and go to sleep until woken up to try again after the condition has
        been met]
  pm_lsu2_tm_l1_hit                                 
       [Load tm hit in L1]
  pm_lsu2_tm_l1_miss                                
       [Load tm L1 miss]
  pm_lsu3_erat_hit                                  
       [Primary ERAT hit. There is no secondary ERAT]
  pm_lsu3_false_lhs                                 
       [False LHS match detected]
  pm_lsu3_l1_cam_cancel                             
       [ls3 l1 tm cam cancel]
  pm_lsu3_ldmx_fin                                  
       [New P9 instruction LDMX. The definition of this new PMU event is (from
        the ldmx RFC02491): The thread has executed an ldmx instruction that
        accessed a doubleword that contains an effective address within an
        enabled section of the Load Monitored region. This event, therefore,
        should not occur if the FSCR has disabled the load monitored facility
        (FSCR[52]) or disabled the EBB facility (FSCR[56])]
  pm_lsu3_store_reject                              
       [All internal store rejects cause the instruction to go back to the SRQ
        and go to sleep until woken up to try again after the condition has
        been met]
  pm_lsu3_tm_l1_hit                                 
       [Load tm hit in L1]
  pm_lsu3_tm_l1_miss                                
       [Load tm L1 miss]
  pm_lsu_dtlb_miss_16g_1g                           
       [Data TLB Miss page size 16G (HPT) or 1G (Radix)]
  pm_lsu_dtlb_miss_16m_2m                           
       [Data TLB Miss page size 16M (HPT) or 2M (Radix)]
  pm_lsu_dtlb_miss_4k                               
       [Data TLB Miss page size 4K]
  pm_lsu_dtlb_miss_64k                              
       [Data TLB Miss page size 64K]
  pm_lsu_flush_atomic                               
       [Quad-word loads (lq) are considered atomic because they always span at
        least 2 slices. If a snoop or store from another thread changes the
        data the load is accessing between the 2 or 3 pieces of the lq
        instruction, the lq will be flushed]
  pm_lsu_flush_ci                                   
       [Load was not issued to LSU as a cache inhibited (non-cacheable) load
        but it was later determined to be cache inhibited]
  pm_lsu_flush_emsh                                 
       [An ERAT miss was detected after a set-p hit. Erat tracker indicates
        fail due to tlbmiss and the instruction gets flushed because the
        instruction was working on the wrong address]
  pm_lsu_flush_larx_stcx                            
       [A larx is flushed because an older larx has an LMQ reservation for the
        same thread. A stcx is flushed because an older stcx is in the LMQ.
        The flush happens when the older larx/stcx relaunches]
  pm_lsu_flush_lhl_shl                              
       [The instruction was flushed because of a sequential load/store
        consistency. If a load or store hits on an older load that has either
        been snooped (for loads) or has stale data (for stores)]
  pm_lsu_flush_lhs                                  
       [Effective Address alias flush : no EA match but Real Address match. If
        the data has not yet been returned for this load, the instruction will
        just be rejected, but if it has returned data, it will be flushed]
  pm_lsu_flush_next                                 
       [LSU flush next reported at flush time. Sometimes these also come with
        an exception]
  pm_lsu_flush_other                                
       [Other LSU flushes including: Sync (sync ack from L2 caused search of
        LRQ for oldest snooped load, This will either signal a Precise Flush
        of the oldest snooped loa or a Flush Next PPC); Data Valid Flush Next
        (several cases of this, one example is store and reload are lined up
        such that a store-hit-reload scenario exists and the CDF has already
        launched and has gotten bad/stale data); Bad Data Valid Flush Next
        (might be a few cases of this, one example is a larxa (D$ hit) return
        data and dval but can't allocate to LMQ (LMQ full or other reason).
        Already gave dval but can't watch it for snoop_hit_larx. Need to take
        the “bad dval” back and flush all younger ops)]
  pm_lsu_flush_relaunch_miss                        
       [If a load that has already returned data and has to relaunch for any
        reason then gets a miss (erat, setp, data cache), it will often be
        flushed at relaunch time because the data might be inconsistent]
  pm_lsu_flush_sao                                  
       [A load-hit-load condition with Strong Address Ordering will have
        address compare disabled and flush]
  pm_lsu_flush_ue                                   
       [Correctable ECC error on reload data, reported at critical data
        forward time]
  pm_lsu_flush_wrk_arnd                             
       [LSU workaround flush. These flushes are setup with programmable scan
        only latches to perform various actions when the flush macro receives
        a trigger from the dbg macros. These actions include things like
        flushing the next op encountered for a particular thread or flushing
        the next op that is NTC op that is encountered on a particular slice.
        The kind of flush that the workaround is setup to perform is highly
        variable]
  pm_lsu_lmq_full_cyc                               
       [Counts the number of cycles the LMQ is full]
  pm_lsu_ncst                                       
       [Asserts when a i=1 store op is sent to the nest. No record of issue
        pipe (LS0/LS1) is maintained so this is for both pipes. Probably don't
        need separate LS0 and LS1]
  pm_lsu_stcx                                       
       [STCX sent to nest, i.e. total]
  pm_lsu_stcx_fail                                  
       []
  pm_lwsync                                         
       []
  pm_math_flop_cmpl                                 
       [Math flop instruction completed]
  pm_mem_rwitm                                      
       [Memory Read With Intent to Modify for this thread]
  pm_mrk_back_br_cmpl                               
       [Marked branch instruction completed with a target address less than
        current instruction address]
  pm_mrk_br_2path                                   
       [marked branches which are not strongly biased]
  pm_mrk_data_from_dl2l3_mod                        
       [The processor's data cache was reloaded with Modified (M) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a marked load]
  pm_mrk_data_from_dl2l3_mod_cyc                    
       [Duration in cycles to reload with Modified (M) data from another
        chip's L2 or L3 on a different Node or Group (Distant), as this chip
        due to a marked load]
  pm_mrk_data_from_dl2l3_shr                        
       [The processor's data cache was reloaded with Shared (S) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a marked load]
  pm_mrk_data_from_dl4                              
       [The processor's data cache was reloaded from another chip's L4 on a
        different Node or Group (Distant) due to a marked load]
  pm_mrk_data_from_dl4_cyc                          
       [Duration in cycles to reload from another chip's L4 on a different
        Node or Group (Distant) due to a marked load]
  pm_mrk_data_from_dmem                             
       [The processor's data cache was reloaded from another chip's memory on
        the same Node or Group (Distant) due to a marked load]
  pm_mrk_data_from_dmem_cyc                         
       [Duration in cycles to reload from another chip's memory on the same
        Node or Group (Distant) due to a marked load]
  pm_mrk_data_from_l2                               
       [The processor's data cache was reloaded from local core's L2 due to a
        marked load]
  pm_mrk_data_from_l21_mod                          
       [The processor's data cache was reloaded with Modified (M) data from
        another core's L2 on the same chip due to a marked load]
  pm_mrk_data_from_l2_cyc                           
       [Duration in cycles to reload from local core's L2 due to a marked load]
  pm_mrk_data_from_l2_disp_conflict_ldhitst         
       [The processor's data cache was reloaded from local core's L2 with load
        hit store conflict due to a marked load]
  pm_mrk_data_from_l2_disp_conflict_other_cyc       
       [Duration in cycles to reload from local core's L2 with dispatch
        conflict due to a marked load]
  pm_mrk_data_from_l2_mepf_cyc                      
       [Duration in cycles to reload from local core's L2 hit without dispatch
        conflicts on Mepf state. due to a marked load]
  pm_mrk_data_from_l2_no_conflict                   
       [The processor's data cache was reloaded from local core's L2 without
        conflict due to a marked load]
  pm_mrk_data_from_l2_no_conflict_cyc               
       [Duration in cycles to reload from local core's L2 without conflict due
        to a marked load]
  pm_mrk_data_from_l2miss                           
       [The processor's data cache was reloaded from a location other than the
        local core's L2 due to a marked load]
  pm_mrk_data_from_l2miss_cyc                       
       [Duration in cycles to reload from a location other than the local
        core's L2 due to a marked load]
  pm_mrk_data_from_l31_eco_mod                      
       [The processor's data cache was reloaded with Modified (M) data from
        another core's ECO L3 on the same chip due to a marked load]
  pm_mrk_data_from_l31_eco_mod_cyc                  
       [Duration in cycles to reload with Modified (M) data from another
        core's ECO L3 on the same chip due to a marked load]
  pm_mrk_data_from_l31_mod                          
       [The processor's data cache was reloaded with Modified (M) data from
        another core's L3 on the same chip due to a marked load]
  pm_mrk_data_from_l31_mod_cyc                      
       [Duration in cycles to reload with Modified (M) data from another
        core's L3 on the same chip due to a marked load]
  pm_mrk_data_from_l31_shr_cyc                      
       [Duration in cycles to reload with Shared (S) data from another core's
        L3 on the same chip due to a marked load]
  pm_mrk_data_from_l3_cyc                           
       [Duration in cycles to reload from local core's L3 due to a marked load]
  pm_mrk_data_from_l3_disp_conflict                 
       [The processor's data cache was reloaded from local core's L3 with
        dispatch conflict due to a marked load]
  pm_mrk_data_from_l3_disp_conflict_cyc             
       [Duration in cycles to reload from local core's L3 with dispatch
        conflict due to a marked load]
  pm_mrk_data_from_l3_mepf                          
       [The processor's data cache was reloaded from local core's L3 without
        dispatch conflicts hit on Mepf state. due to a marked load]
  pm_mrk_data_from_l3_mepf_cyc                      
       [Duration in cycles to reload from local core's L3 without dispatch
        conflicts hit on Mepf state due to a marked load]
  pm_mrk_data_from_l3_no_conflict                   
       [The processor's data cache was reloaded from local core's L3 without
        conflict due to a marked load]
  pm_mrk_data_from_l3_no_conflict_cyc               
       [Duration in cycles to reload from local core's L3 without conflict due
        to a marked load]
  pm_mrk_data_from_l3miss                           
       [The processor's data cache was reloaded from a location other than the
        local core's L3 due to a marked load]
  pm_mrk_data_from_memory                           
       [The processor's data cache was reloaded from a memory location
        including L4 from local remote or distant due to a marked load]
  pm_mrk_data_from_memory_cyc                       
       [Duration in cycles to reload from a memory location including L4 from
        local remote or distant due to a marked load]
  pm_mrk_data_from_off_chip_cache                   
       [The processor's data cache was reloaded either shared or modified data
        from another core's L2/L3 on a different chip (remote or distant) due
        to a marked load]
  pm_mrk_data_from_off_chip_cache_cyc               
       [Duration in cycles to reload either shared or modified data from
        another core's L2/L3 on a different chip (remote or distant) due to a
        marked load]
  pm_mrk_data_from_rmem                             
       [The processor's data cache was reloaded from another chip's memory on
        the same Node or Group ( Remote) due to a marked load]
  pm_mrk_data_from_rmem_cyc                         
       [Duration in cycles to reload from another chip's memory on the same
        Node or Group ( Remote) due to a marked load]
  pm_mrk_dfu_fin                                    
       [Decimal Unit marked Instruction Finish]
  pm_mrk_dpteg_from_l21_shr                         
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another core's L2 on the same chip due to a marked data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_mrk_dpteg_from_l31_shr                         
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another core's L3 on the same chip due to a marked data side request..
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_mrk_dpteg_from_rl4                             
       [A Page Table Entry was loaded into the TLB from another chip's L4 on
        the same Node or Group ( Remote) due to a marked data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_mrk_fab_rsp_bkill                              
       [Marked store had to do a bkill]
  pm_mrk_fab_rsp_bkill_cyc                          
       [cycles L2 RC took for a bkill]
  pm_mrk_fxu_fin                                    
       [fxu marked instr finish]
  pm_mrk_ic_miss                                    
       [Marked instruction experienced I cache miss]
  pm_mrk_inst_from_l3miss                           
       [Marked instruction was reloaded from a location beyond the local
        chiplet]
  pm_mrk_l1_icache_miss                             
       [sampled Instruction suffered an icache Miss]
  pm_mrk_l1_reload_valid                            
       [Marked demand reload]
  pm_mrk_ld_miss_l1_cyc                             
       [Marked ld latency]
  pm_mrk_lsu_derat_miss                             
       [Marked derat reload (miss) for any page size]
  pm_mrk_st_cmpl_int                                
       [marked store finished with intervention]
  pm_mrk_st_drain_to_l2disp_cyc                     
       [cycles to drain st from core to L2]
  pm_mrk_tend_fail                                  
       [Nested or not nested tend failed for a marked tend instruction]
  pm_mrk_vsu_fin                                    
       [VSU marked instr finish]
  pm_mult_mrk                                       
       [mult marked instr]
  pm_non_data_store                                 
       [All ops that drain from s2q to L2 and contain no data]
  pm_non_tm_rst_sc                                  
       [Non-TM snoop hits line in L3 that is TM_SC state and causes it to be
        invalidated]
  pm_ntc_all_fin                                    
       [Cycles after instruction finished to instruction completed]
  pm_partial_st_fin                                 
       [Any store finished by an LSU slice]
  pm_pmc3_saved                                     
       [PMC3 Rewind Value saved]
  pm_probe_nop_disp                                 
       [ProbeNops dispatched]
  pm_pte_prefetch                                   
       [PTE prefetches]
  pm_ptesync                                        
       []
  pm_radix_pwc_l1_pde_from_l2                       
       [A Page Directory Entry was reloaded to a level 1 page walk cache from
        the core's L2 data cache]
  pm_radix_pwc_l2_pte_from_l3miss                   
       [A Page Table Entry was reloaded to a level 2 page walk cache from
        beyond the core's L3 data cache. This implies that level 3 and level 4
        PWC accesses were not necessary for this translation. The source could
        be local/remote/distant memory or another core's cache]
  pm_radix_pwc_l4_pte_from_l3miss                   
       [A Page Table Entry was reloaded to a level 4 page walk cache from
        beyond the core's L3 data cache. This is the deepest level of PWC
        possible for a translation. The source could be local/remote/distant
        memory or another core's cache]
  pm_radix_pwc_miss                                 
       [A radix translation attempt missed in the TLB and all levels of page
        walk cache]
  pm_rc0_busy                                       
       [RC mach 0 Busy. Used by PMU to sample ave RC lifetime (mach0 used as
        sample point)]
  pm_rc_usage                                       
       [Continuous 16 cycle (2to1) window where this signals rotates thru
        sampling each RC machine busy. PMU uses this wave to then do 16 cyc
        count to sample total number of machs running]
  pm_rd_clearing_sc                                 
       [Core TM load hits line in L3 in TM_SC state and causes it to be
        invalidated]
  pm_rd_forming_sc                                  
       [Doesn't occur]
  pm_rd_hit_pf                                      
       [RD machine hit L3 PF machine]
  pm_run_cyc_smt4_mode                              
       [Cycles in which this thread's run latch is set and the core is in SMT4
        mode]
  pm_run_inst_cmpl                                  
       [Run_Instructions]
  pm_s2q_full                                       
       [Cycles during which the S2Q is full]
  pm_scalar_flop_cmpl                               
       [Scalar flop operation completed]
  pm_shl_created                                    
       [Store-Hit-Load Table Entry Created]
  pm_shl_st_dep_created                             
       [Store-Hit-Load Table Read Hit with entry Enabled]
  pm_sn0_busy                                       
       [SN mach 0 Busy. Used by PMU to sample ave SN lifetime (mach0 used as
        sample point)]
  pm_sn_hit                                         
       [Any port snooper hit L3. Up to 4 can happen in a cycle but we only
        count 1]
  pm_sn_invl                                        
       [Any port snooper detects a store to a line in the Sx state and
        invalidates the line. Up to 4 can happen in a cycle but we only count
        1]
  pm_sn_miss                                        
       [Any port snooper L3 miss or collision. Up to 4 can happen in a cycle
        but we only count 1]
  pm_sn_usage                                       
       [Continuous 16 cycle (2to1) window where this signals rotates thru
        sampling each SN machine busy. PMU uses this wave to then do 16 cyc
        count to sample total number of machs running]
  pm_snoop_tlbie                                    
       [TLBIE snoop]
  pm_snp_tm_hit_m                                   
       [TM snoop that is a store hits line in L3 in M or Mu state (exclusive
        modified)]
  pm_snp_tm_hit_t                                   
       [TM snoop that is a store hits line in L3 in T, Tn or Te state (shared
        modified)]
  pm_srq_empty_cyc                                  
       [Cycles in which the SRQ has at least one (out of four) empty slice]
  pm_srq_sync_cyc                                   
       [A sync is in the S2Q (edge detect to count)]
  pm_st_caused_fail                                 
       [Non-TM Store caused any thread to fail]
  pm_stcx_fin                                       
       [Number of stcx instructions finished. This includes instructions in
        the speculative path of a branch that may be flushed]
  pm_stcx_success_cmpl                              
       [Number of stcx instructions that completed successfully]
  pm_stop_fetch_pending_cyc                         
       [Fetching is stopped due to an incoming instruction that will result in
        a flush]
  pm_sync_mrk_l2miss                                
       [Marked L2 Miss that can throw a synchronous interrupt]
  pm_sync_mrk_l3miss                                
       [Marked L3 misses that can throw a synchronous interrupt]
  pm_tablewalk_cyc_pref                             
       [tablewalk qualified for pte prefetches]
  pm_tage_correct                                   
       [The TAGE overrode BHT direction prediction and it was correct.
        Includes taken and not taken and is counted at execution time]
  pm_tage_correct_taken_cmpl                        
       [The TAGE overrode BHT direction prediction and it was correct. Counted
        at completion for taken branches only]
  pm_tage_override_wrong                            
       [The TAGE overrode BHT direction prediction but it was incorrect.
        Counted at completion for taken branches only]
  pm_tage_override_wrong_spec                       
       [The TAGE overrode BHT direction prediction and it was correct.
        Includes taken and not taken and is counted at execution time]
  pm_taken_br_mpred_cmpl                            
       [Total number of taken branches that were incorrectly predicted as
        not-taken. This event counts branches completed and does not include
        speculative instructions]
  pm_tb_bit_trans                                   
       [timebase event]
  pm_tend_pend_cyc                                  
       [TEND latency per thread]
  pm_thrd_all_run_cyc                               
       [Cycles in which all the threads have the run latch set]
  pm_thrd_prio_0_1_cyc                              
       [Cycles thread running at priority level 0 or 1]
  pm_thrd_prio_2_3_cyc                              
       [Cycles thread running at priority level 2 or 3]
  pm_thrd_prio_4_5_cyc                              
       [Cycles thread running at priority level 4 or 5]
  pm_thrd_prio_6_7_cyc                              
       [Cycles thread running at priority level 6 or 7]
  pm_thresh_exc_512                                 
       [Threshold counter exceeded a value of 512]
  pm_tm_cam_overflow                                
       [L3 TM CAM is full when a L2 castout of TM_SC line occurs. Line is
        pushed to memory]
  pm_tm_cap_overflow                                
       [TM Footprint Capacity Overflow]
  pm_tm_fail_conf_non_tm                            
       [TM aborted because a conflict occurred with a non-transactional access
        by another processor]
  pm_tm_fail_conf_tm                                
       [TM aborted because a conflict occurred with another transaction]
  pm_tm_fail_footprint_overflow                     
       [TM aborted because the tracking limit for transactional storage
        accesses was exceeded.. Asynchronous]
  pm_tm_fail_non_tx_conflict                        
       [Non transactional conflict from LSU, gets reported to TEXASR]
  pm_tm_fail_self                                   
       [TM aborted because a self-induced conflict occurred in Suspended
        state, due to one of the following: a store to a storage location that
        was previously accessed transactionally; a dcbf, dcbi, or icbi
        specify- ing a block that was previously accessed transactionally; a
        dcbst specifying a block that was previously written transactionally;
        or a tlbie that specifies a translation that was pre- viously used
        transactionally]
  pm_tm_fail_tlbie                                  
       [Transaction failed because there was a TLBIE hit in the bloom filter]
  pm_tm_fail_tx_conflict                            
       [Transactional conflict from LSU, gets reported to TEXASR]
  pm_tm_fav_caused_fail                             
       [TM Load (fav) caused another thread to fail]
  pm_tm_fav_tbegin                                  
       [Dispatch time Favored tbegin]
  pm_tm_ld_caused_fail                              
       [Non-TM Load caused any thread to fail]
  pm_tm_ld_conf                                     
       [TM Load (fav or non-fav) ran into conflict (failed)]
  pm_tm_nested_tbegin                               
       [Completion Tm nested tbegin]
  pm_tm_nested_tend                                 
       [Completion time nested tend]
  pm_tm_non_fav_tbegin                              
       [Dispatch time non favored tbegin]
  pm_tm_outer_tbegin                                
       [Completion time outer tbegin]
  pm_tm_outer_tbegin_disp                           
       [Number of outer tbegin instructions dispatched. The dispatch unit
        determines whether the tbegin instruction is outer or nested. This is
        a speculative count, which includes flushed instructions]
  pm_tm_outer_tend                                  
       [Completion time outer tend]
  pm_tm_passed                                      
       [Number of TM transactions that passed]
  pm_tm_rst_sc                                      
       [TM snoop hits line in L3 that is TM_SC state and causes it to be
        invalidated]
  pm_tm_sc_co                                       
       [L3 castout of line that was StoreCopy (original value of speculatively
        written line) in a Transaction]
  pm_tm_st_caused_fail                              
       [TM Store (fav or non-fav) caused another thread to fail]
  pm_tm_st_conf                                     
       [TM Store (fav or non-fav) ran into conflict (failed)]
  pm_tm_tabort_treclaim                             
       [Completion time tabortnoncd, tabortcd, treclaim]
  pm_tm_tresume                                     
       [TM resume instruction completed]
  pm_tm_tsuspend                                    
       [TM suspend instruction completed]
  pm_tma_req_l2                                     
       [addrs only req to L2 only on the first one,Indication that Load
        footprint is not expanding]
  pm_vector_ld_cmpl                                 
       [Number of vector load instructions completed]
  pm_vsu_fin                                        
       [VSU instruction finished. Up to 4 per cycle]
  pm_xlate_hpt_mode                                 
       [LSU reports every cycle the thread is in HPT translation mode (as
        opposed to radix mode)]
  pm_xlate_miss                                     
       [The LSU requested a line from L2 for translation. It may be satisfied
        from any source beyond L2. Includes speculative instructions. Includes
        instruction, prefetch and demand]
  pm_xlate_radix_mode                               
       [LSU reports every cycle the thread is in radix translation mode (as
        opposed to HPT mode)]

pipeline:
  pm_1plus_ppc_disp                                 
       [Cycles at least one Instr Dispatched]
  pm_2flop_cmpl                                     
       [DP vector version of fmul, fsub, fcmp, fsel, fabs, fnabs, fres
        ,fsqrte, fneg ]
  pm_bru_fin                                        
       [Branch Instruction Finished]
  pm_chip_pump_cpred                                
       [Initial and Final Pump Scope was chip pump (prediction=correct) for
        all data types excluding data prefetch (demand load,inst prefetch,inst
        fetch,xlate)]
  pm_cmplu_stall                                    
       [Nothing completed and ICT not empty]
  pm_cmplu_stall_dflong                             
       [Finish stall because the NTF instruction was a multi-cycle instruction
        issued to the Decimal Floating Point execution pipe and waiting to
        finish. Includes decimal floating point instructions + 128 bit binary
        floating point instructions. Qualified by multicycle]
  pm_cmplu_stall_dfu                                
       [Finish stall because the NTF instruction was issued to the Decimal
        Floating Point execution pipe and waiting to finish. Includes decimal
        floating point instructions + 128 bit binary floating point
        instructions. Not qualified by multicycle]
  pm_cmplu_stall_dmiss_l21_l31                      
       [Completion stall by Dcache miss which resolved on chip ( excluding
        local L2/L3)]
  pm_cmplu_stall_dplong                             
       [Finish stall because the NTF instruction was a scalar multi-cycle
        instruction issued to the Double Precision execution pipe and waiting
        to finish. Includes binary floating point instructions in 32 and 64
        bit binary floating point format. Qualified by NOT vector AND
        multicycle]
  pm_cmplu_stall_emq_full                           
       [Finish stall because the next to finish instruction suffered an ERAT
        miss and the EMQ was full]
  pm_cmplu_stall_erat_miss                          
       [Finish stall because the NTF instruction was a load or store that
        suffered a translation miss]
  pm_data_from_dl4                                  
       [The processor's data cache was reloaded from another chip's L4 on a
        different Node or Group (Distant) due to a demand load]
  pm_data_from_dmem                                 
       [The processor's data cache was reloaded from another chip's memory on
        the same Node or Group (Distant) due to a demand load]
  pm_data_from_rl2l3_mod                            
       [The processor's data cache was reloaded with Modified (M) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a demand load]
  pm_derat_miss_16m_2m                              
       [Data ERAT Miss (Data TLB Access) page size 16M (HPT mode) or 2M (Radix
        mode)]
  pm_derat_miss_4k                                  
       [Data ERAT Miss (Data TLB Access) page size 4K]
  pm_derat_miss_64k                                 
       [Data ERAT Miss (Data TLB Access) page size 64K]
  pm_dfu_busy                                       
       [Cycles in which all 4 Decimal Floating Point units are busy. The DFU
        is running at capacity]
  pm_disp_held                                      
       [Dispatch Held]
  pm_dpteg_from_l21_mod                             
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another core's L2 on the same chip due to a data side request. When
        using Radix Page Translation, this count excludes PDE reloads. Only
        PTE reloads are included]
  pm_dpteg_from_l21_shr                             
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another core's L2 on the same chip due to a data side request. When
        using Radix Page Translation, this count excludes PDE reloads. Only
        PTE reloads are included]
  pm_dpteg_from_l2_no_conflict                      
       [A Page Table Entry was loaded into the TLB from local core's L2
        without conflict due to a data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_dpteg_from_l3_disp_conflict                    
       [A Page Table Entry was loaded into the TLB from local core's L3 with
        dispatch conflict due to a data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_dpteg_from_l3_mepf                             
       [A Page Table Entry was loaded into the TLB from local core's L3
        without dispatch conflicts hit on Mepf state. due to a data side
        request. When using Radix Page Translation, this count excludes PDE
        reloads. Only PTE reloads are included]
  pm_dpteg_from_rl2l3_mod                           
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a data side request. When using Radix Page Translation,
        this count excludes PDE reloads. Only PTE reloads are included]
  pm_dpteg_from_rl2l3_shr                           
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a data side request. When using Radix Page Translation,
        this count excludes PDE reloads. Only PTE reloads are included]
  pm_dslb_miss                                      
       [gate_and(sd_pc_c0_comp_valid AND
        sd_pc_c0_comp_thread(0:1)=tid,sd_pc_c0_comp_ppc_count(0:3)) +
        gate_and(sd_pc_c1_comp_valid AND
        sd_pc_c1_comp_thread(0:1)=tid,sd_pc_c1_comp_ppc_count(0:3))]
  pm_dtlb_miss                                      
       [Data PTEG reload]
  pm_dummy1_remove_me                               
       [Space holder for L2_PC_PM_MK_LDST_SCOPE_PRED_STATUS]
  pm_dummy2_remove_me                               
       [Space holder for LS_PC_RELOAD_RA]
  pm_ext_int                                        
       [external interrupt]
  pm_flop_cmpl                                      
       [Floating Point Operation Finished]
  pm_flush                                          
       [Flush (any type)]
  pm_fxu_busy                                       
       [Cycles in which all 4 FXUs are busy. The FXU is running at capacity]
  pm_fxu_fin                                        
       [The fixed point unit Unit finished an instruction. Instructions that
        finish may not necessary complete]
  pm_fxu_idle                                       
       [Cycles in which FXU0, FXU1, FXU2, and FXU3 are all idle]
  pm_grp_pump_mpred                                 
       [Final Pump Scope (Group) ended up either larger or smaller than
        Initial Pump Scope for all data types excluding data prefetch (demand
        load,inst prefetch,inst fetch,xlate)]
  pm_hv_cyc                                         
       [Cycles in which msr_hv is high. Note that this event does not take
        msr_pr into consideration]
  pm_ic_demand_cyc                                  
       [Icache miss demand cycles]
  pm_ic_miss_cmpl                                   
       [Non-speculative icache miss, counted at completion]
  pm_ict_empty_cyc                                  
       [Cycles in which the ICT is completely empty. No itags are assigned to
        any thread]
  pm_ict_noslot_br_mpred                            
       [Ict empty for this thread due to branch mispred]
  pm_ict_noslot_br_mpred_icmiss                     
       [Ict empty for this thread due to Icache Miss and branch mispred]
  pm_ict_noslot_cyc                                 
       [Number of cycles the ICT has no itags assigned to this thread]
  pm_ict_noslot_disp_held                           
       [Cycles in which the NTC instruction is held at dispatch for any reason]
  pm_ict_noslot_disp_held_sync                      
       [Dispatch held due to a synchronizing instruction at dispatch]
  pm_ict_noslot_disp_held_tbegin                    
       [the NTC instruction is being held at dispatch because it is a tbegin
        instruction and there is an older tbegin in the pipeline that must
        complete before the younger tbegin can dispatch]
  pm_ict_noslot_ic_l3                               
       [Ict empty for this thread due to icache misses that were sourced from
        the local L3]
  pm_ict_noslot_ic_l3miss                           
       [Ict empty for this thread due to icache misses that were sourced from
        beyond the local L3. The source could be local/remote/distant memory
        or another core's cache]
  pm_ict_noslot_ic_miss                             
       [Ict empty for this thread due to Icache Miss]
  pm_ierat_reload                                   
       [Number of I-ERAT reloads]
  pm_ierat_reload_16m                               
       [IERAT Reloaded (Miss) for a 16M page]
  pm_inst_chip_pump_cpred                           
       [Initial and Final Pump Scope was chip pump (prediction=correct) for an
        instruction fetch]
  pm_inst_cmpl                                      
       [Number of PowerPC Instructions that completed]
  pm_inst_from_memory                               
       [The processor's Instruction cache was reloaded from a memory location
        including L4 from local remote or distant due to an instruction fetch
        (not prefetch)]
  pm_inst_grp_pump_mpred_rty                        
       [Final Pump Scope (Group) ended up larger than Initial Pump Scope
        (Chip) for an instruction fetch]
  pm_ld_l3miss_pend_cyc                             
       [Cycles L3 miss was pending for this thread]
  pm_mem_co                                         
       [Memory castouts from this thread]
  pm_mem_read                                       
       [Reads from Memory from this thread (includes
        data/inst/xlate/l1prefetch/inst prefetch). Includes L4]
  pm_mrk_data_from_l21_mod_cyc                      
       [Duration in cycles to reload with Modified (M) data from another
        core's L2 on the same chip due to a marked load]
  pm_mrk_data_from_l21_shr                          
       [The processor's data cache was reloaded with Shared (S) data from
        another core's L2 on the same chip due to a marked load]
  pm_mrk_data_from_l21_shr_cyc                      
       [Duration in cycles to reload with Shared (S) data from another core's
        L2 on the same chip due to a marked load]
  pm_mrk_data_from_l2_mepf                          
       [The processor's data cache was reloaded from local core's L2 hit
        without dispatch conflicts on Mepf state. due to a marked load]
  pm_mrk_data_from_l31_shr                          
       [The processor's data cache was reloaded with Shared (S) data from
        another core's L3 on the same chip due to a marked load]
  pm_mrk_data_from_on_chip_cache                    
       [The processor's data cache was reloaded either shared or modified data
        from another core's L2/L3 on the same chip due to a marked load]
  pm_mrk_data_from_rl2l3_mod                        
       [The processor's data cache was reloaded with Modified (M) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a marked load]
  pm_mrk_data_from_rl2l3_shr                        
       [The processor's data cache was reloaded with Shared (S) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a marked load]
  pm_mrk_derat_miss_16g_1g                          
       [Marked Data ERAT Miss (Data TLB Access) page size 16G (hpt mode) and
        1G (radix mode)]
  pm_mrk_derat_miss_16m_2m                          
       [Marked Data ERAT Miss (Data TLB Access) page size 16M (hpt mode) or 2M
        (radix mode)]
  pm_mrk_derat_miss_4k                              
       [Marked Data ERAT Miss (Data TLB Access) page size 4K]
  pm_mrk_dpteg_from_dl2l3_shr                       
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a marked data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_mrk_dpteg_from_dl4                             
       [A Page Table Entry was loaded into the TLB from another chip's L4 on a
        different Node or Group (Distant) due to a marked data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_mrk_dpteg_from_dmem                            
       [A Page Table Entry was loaded into the TLB from another chip's memory
        on the same Node or Group (Distant) due to a marked data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_mrk_dpteg_from_l2                              
       [A Page Table Entry was loaded into the TLB from local core's L2 due to
        a marked data side request. When using Radix Page Translation, this
        count excludes PDE reloads. Only PTE reloads are included]
  pm_mrk_dpteg_from_l21_mod                         
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another core's L2 on the same chip due to a marked data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_mrk_dpteg_from_l2_no_conflict                  
       [A Page Table Entry was loaded into the TLB from local core's L2
        without conflict due to a marked data side request. When using Radix
        Page Translation, this count excludes PDE reloads. Only PTE reloads
        are included]
  pm_mrk_dpteg_from_l31_mod                         
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another core's L3 on the same chip due to a marked data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_mrk_dpteg_from_l3_mepf                         
       [A Page Table Entry was loaded into the TLB from local core's L3
        without dispatch conflicts hit on Mepf state. due to a marked data
        side request. When using Radix Page Translation, this count excludes
        PDE reloads. Only PTE reloads are included]
  pm_mrk_dpteg_from_l3_no_conflict                  
       [A Page Table Entry was loaded into the TLB from local core's L3
        without conflict due to a marked data side request. When using Radix
        Page Translation, this count excludes PDE reloads. Only PTE reloads
        are included]
  pm_mrk_dpteg_from_memory                          
       [A Page Table Entry was loaded into the TLB from a memory location
        including L4 from local remote or distant due to a marked data side
        request. When using Radix Page Translation, this count excludes PDE
        reloads. Only PTE reloads are included]
  pm_mrk_dpteg_from_off_chip_cache                  
       [A Page Table Entry was loaded into the TLB either shared or modified
        data from another core's L2/L3 on a different chip (remote or distant)
        due to a marked data side request. When using Radix Page Translation,
        this count excludes PDE reloads. Only PTE reloads are included]
  pm_mrk_dpteg_from_on_chip_cache                   
       [A Page Table Entry was loaded into the TLB either shared or modified
        data from another core's L2/L3 on the same chip due to a marked data
        side request.. When using Radix Page Translation, this count excludes
        PDE reloads. Only PTE reloads are included]
  pm_mrk_dpteg_from_rl2l3_mod                       
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a marked data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_mrk_ld_miss_l1                                 
       [Marked DL1 Demand Miss counted at exec time. Note that this count is
        per slice, so if a load spans multiple slices this event will
        increment multiple times for a single load]
  pm_ntc_fin                                        
       [Cycles in which the oldest instruction in the pipeline (NTC) finishes.
        This event is used to account for cycles in which work is being
        completed in the CPI stack]
  pm_ntc_issue_held_arb                             
       [The NTC instruction is being held at dispatch because it lost
        arbitration onto the issue pipe to another instruction (from the same
        thread or a different thread)]
  pm_pmc2_rewind                                    
       [PMC2 Rewind Event (did not match condition)]
  pm_pmc2_saved                                     
       [PMC2 Rewind Value saved]
  pm_pmc3_overflow                                  
       [Overflow from counter 3]
  pm_pmc4_saved                                     
       [PMC4 Rewind Value saved (matched condition)]
  pm_pmc5_overflow                                  
       [Overflow from counter 5]
  pm_pmc6_overflow                                  
       [Overflow from counter 6]
  pm_pump_cpred                                     
       [Pump prediction correct. Counts across all types of pumps for all data
        types excluding data prefetch (demand load,inst prefetch,inst
        fetch,xlate)]
  pm_pump_mpred                                     
       [Pump misprediction. Counts across all types of pumps for all data
        types excluding data prefetch (demand load,inst prefetch,inst
        fetch,xlate)]
  pm_radix_pwc_l2_pde_from_l3                       
       [A Page Directory Entry was reloaded to a level 2 page walk cache from
        the core's L3 data cache]
  pm_radix_pwc_l2_pte_from_l2                       
       [A Page Table Entry was reloaded to a level 2 page walk cache from the
        core's L2 data cache. This implies that level 3 and level 4 PWC
        accesses were not necessary for this translation]
  pm_run_cyc                                        
       [Run_cycles]
  pm_sync_mrk_fx_divide                             
       [Marked fixed point divide that can cause a synchronous interrupt]
  pm_thresh_exc_2048                                
       [Threshold counter exceeded a value of 2048]
  pm_tlb_miss                                       
       [TLB Miss (I + D)]
  pm_tlbie_fin                                      
       [tlbie finished]
  pm_tm_aborts                                      
       [Number of TM transactions aborted]
  pm_tm_tx_pass_run_cyc                             
       [cycles spent in successful transactions]
  pm_vsu_dp_fsqrt_fdiv                              
       [vector versions of fdiv,fsqrt]
  pm_vsu_fsqrt_fdiv                                 
       [four flops operation (fdiv,fsqrt) Scalar Instructions only]
  pm_vsu_non_flop_cmpl                              
       [Non FLOP operation completed]

pmc:
  pm_1flop_cmpl                                     
       [one flop (fadd, fmul, fsub, fcmp, fsel, fabs, fnabs, fres, fsqrte,
        fneg) operation completed]
  pm_4flop_cmpl                                     
       [4 FLOP instruction completed]
  pm_8flop_cmpl                                     
       [8 FLOP instruction completed]
  pm_br_2path                                       
       [Branches that are not strongly biased]
  pm_cmplu_stall_bru                                
       [Completion stall due to a Branch Unit]
  pm_cmplu_stall_crypto                             
       [Finish stall because the NTF instruction was routed to the crypto
        execution pipe and was waiting to finish]
  pm_cmplu_stall_dcache_miss                        
       [Finish stall because the NTF instruction was a load that missed the L1
        and was waiting for the data to return from the nest]
  pm_dpteg_from_l3miss                              
       [A Page Table Entry was loaded into the TLB from a location other than
        the local core's L3 due to a data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_dpteg_from_ll4                                 
       [A Page Table Entry was loaded into the TLB from the local chip's L4
        cache due to a data side request. When using Radix Page Translation,
        this count excludes PDE reloads. Only PTE reloads are included]
  pm_dpteg_from_memory                              
       [A Page Table Entry was loaded into the TLB from a memory location
        including L4 from local remote or distant due to a data side request.
        When using Radix Page Translation, this count excludes PDE reloads.
        Only PTE reloads are included]
  pm_freq_down                                      
       [Power Management: Below Threshold B]
  pm_mem_loc_thresh_lsu_high                        
       [Local memory above threshold for LSU medium]
  pm_mrk_data_from_lmem                             
       [The processor's data cache was reloaded from the local chip's Memory
        due to a marked load]
  pm_mrk_data_from_lmem_cyc                         
       [Duration in cycles to reload from the local chip's Memory due to a
        marked load]
  pm_mrk_dcache_reload_intv                         
       [Combined Intervention event]
  pm_mrk_dpteg_from_dl2l3_mod                       
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a marked data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_mrk_dpteg_from_l2miss                          
       [A Page Table Entry was loaded into the TLB from a location other than
        the local core's L2 due to a marked data side request.. When using
        Radix Page Translation, this count excludes PDE reloads. Only PTE
        reloads are included]
  pm_mrk_dpteg_from_l3                              
       [A Page Table Entry was loaded into the TLB from local core's L3 due to
        a marked data side request. When using Radix Page Translation, this
        count excludes PDE reloads. Only PTE reloads are included]
  pm_mrk_dpteg_from_l3_disp_conflict                
       [A Page Table Entry was loaded into the TLB from local core's L3 with
        dispatch conflict due to a marked data side request. When using Radix
        Page Translation, this count excludes PDE reloads. Only PTE reloads
        are included]
  pm_sys_pump_mpred_rty                             
       [Final Pump Scope (system) ended up larger than Initial Pump Scope
        (Chip/Group) for all data types excluding data prefetch (demand
        load,inst prefetch,inst fetch,xlate)]
  pm_tablewalk_cyc                                  
       [Cycles when an instruction tablewalk is active]
  pm_thresh_exc_64                                  
       [Threshold counter exceeded a value of 64]
  pm_tm_trans_run_cyc                               
       [run cycles in transactional state]

translation:
  pm_cmplu_stall_tlbie                              
       [Finish stall because the NTF instruction was a tlbie waiting for
        response from L2]
  pm_cmplu_stall_vdp                                
       [Finish stall because the NTF instruction was a vector instruction
        issued to the Double Precision execution pipe and waiting to finish.
        Includes binary floating point instructions in 32 and 64 bit binary
        floating point format. Not qualified multicycle. Qualified by vector]
  pm_cmplu_stall_vdplong                            
       [Finish stall because the NTF instruction was a scalar multi-cycle
        instruction issued to the Double Precision execution pipe and waiting
        to finish. Includes binary floating point instructions in 32 and 64
        bit binary floating point format. Qualified by NOT vector AND
        multicycle]
  pm_cmplu_stall_vfxlong                            
       [Completion stall due to a long latency vector fixed point instruction
        (division, square root)]
  pm_cmplu_stall_vfxu                               
       [Finish stall due to a vector fixed point instruction in the execution
        pipeline. These instructions get routed to the ALU, ALU2, and DIV
        pipes]
  pm_cyc                                            
       [Processor cycles]
  pm_data_from_l21_mod                              
       [The processor's data cache was reloaded with Modified (M) data from
        another core's L2 on the same chip due to a demand load]
  pm_data_from_l21_shr                              
       [The processor's data cache was reloaded with Shared (S) data from
        another core's L2 on the same chip due to a demand load]
  pm_data_from_l2miss                               
       [Demand LD - L2 Miss (not L2 hit)]
  pm_data_from_l2miss_mod                           
       [The processor's data cache was reloaded from a location other than the
        local core's L2 due to a demand load]
  pm_dp_qp_flop_cmpl                                
       [Double-Precion or Quad-Precision instruction completed]
  pm_dpteg_from_dl2l3_mod                           
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_dpteg_from_dl2l3_shr                           
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another chip's L2 or L3 on a different Node or Group (Distant), as
        this chip due to a data side request. When using Radix Page
        Translation, this count excludes PDE reloads. Only PTE reloads are
        included]
  pm_dpteg_from_dl4                                 
       [A Page Table Entry was loaded into the TLB from another chip's L4 on a
        different Node or Group (Distant) due to a data side request. When
        using Radix Page Translation, this count excludes PDE reloads. Only
        PTE reloads are included]
  pm_dpteg_from_dmem                                
       [A Page Table Entry was loaded into the TLB from another chip's memory
        on the same Node or Group (Distant) due to a data side request. When
        using Radix Page Translation, this count excludes PDE reloads. Only
        PTE reloads are included]
  pm_inst_from_l21_shr                              
       [The processor's Instruction cache was reloaded with Shared (S) data
        from another core's L2 on the same chip due to an instruction fetch
        (not prefetch)]
  pm_inst_from_l2miss                               
       [The processor's Instruction cache was reloaded from a location other
        than the local core's L2 due to an instruction fetch (not prefetch)]
  pm_inst_from_l3                                   
       [The processor's Instruction cache was reloaded from local core's L3
        due to an instruction fetch (not prefetch)]
  pm_inst_from_l3_disp_conflict                     
       [The processor's Instruction cache was reloaded from local core's L3
        with dispatch conflict due to an instruction fetch (not prefetch)]
  pm_inst_from_l3_mepf                              
       [The processor's Instruction cache was reloaded from local core's L3
        without dispatch conflicts hit on Mepf state. due to an instruction
        fetch (not prefetch)]
  pm_inst_from_l3_no_conflict                       
       [The processor's Instruction cache was reloaded from local core's L3
        without conflict due to an instruction fetch (not prefetch)]
  pm_ipteg_from_memory                              
       [A Page Table Entry was loaded into the TLB from a memory location
        including L4 from local remote or distant due to a instruction side
        request]
  pm_ipteg_from_off_chip_cache                      
       [A Page Table Entry was loaded into the TLB either shared or modified
        data from another core's L2/L3 on a different chip (remote or distant)
        due to a instruction side request]
  pm_ipteg_from_on_chip_cache                       
       [A Page Table Entry was loaded into the TLB either shared or modified
        data from another core's L2/L3 on the same chip due to a instruction
        side request]
  pm_ipteg_from_rl2l3_mod                           
       [A Page Table Entry was loaded into the TLB with Modified (M) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a instruction side request]
  pm_ipteg_from_rl2l3_shr                           
       [A Page Table Entry was loaded into the TLB with Shared (S) data from
        another chip's L2 or L3 on the same Node or Group (Remote), as this
        chip due to a instruction side request]
  pm_ipteg_from_rl4                                 
       [A Page Table Entry was loaded into the TLB from another chip's L4 on
        the same Node or Group ( Remote) due to a instruction side request]
  pm_ipteg_from_rmem                                
       [A Page Table Entry was loaded into the TLB from another chip's memory
        on the same Node or Group ( Remote) due to a instruction side request]
  pm_lsu_fin                                        
       [LSU Finished a PPC instruction (up to 4 per cycle)]
  pm_lsu_lmq_srq_empty_cyc                          
       [Cycles in which the LSU is empty for all threads (lmq and srq are
        completely empty)]
  pm_lsu_reject_lhs                                 
       [LSU Reject due to LHS (up to 4 per cycle)]
  pm_mrk_data_from_l31_eco_shr_cyc                  
       [Duration in cycles to reload with Shared (S) data from another core's
        ECO L3 on the same chip due to a marked load]
  pm_mrk_data_from_rl2l3_mod_cyc                    
       [Duration in cycles to reload with Modified (M) data from another
        chip's L2 or L3 on the same Node or Group (Remote), as this chip due
        to a marked load]
  pm_mrk_lsu_fin                                    
       [lsu marked instr PPC finish]
  pm_mrk_ntc_cyc                                    
       [Cycles during which the marked instruction is next to complete
        (completion is held up because the marked instruction hasn't completed
        yet)]
  pm_mrk_probe_nop_cmpl                             
       [Marked probeNops completed]
  pm_pmc1_saved                                     
       [PMC1 Rewind Value saved]
  pm_pmc2_overflow                                  
       [Overflow from counter 2]
  pm_st_cmpl                                        
       [Stores completed from S2Q (2nd-level store queue)]
  pm_st_fin                                         
       [Store finish count. Includes speculative activity]
  pm_st_fwd                                         
       [Store forwards that finished]
  pm_st_miss_l1                                     
       [Store Missed L1]
  pm_stall_end_ict_empty                            
       [The number a times the core transitioned from a stall to ICT-empty for
        this thread]
  pm_stcx_fail                                      
       [stcx failed]
  pm_thresh_exc_32                                  
       [Threshold counter exceeded a value of 32]
  rNNN                                               [Raw hardware event descriptor]
  cpu/t1=v1[,t2=v2,t3 ...]/modifier                  [Raw hardware event descriptor]
  mem:<addr>[/len][:access]                          [Hardware breakpoint]

Metric Groups:

Launching stream...
  Stream launched.
*********** Iteration: rd_percentage=72 pause=25 point_rep=
Measuring bandwidth...
  Bandwidth measured.
Measuring latency...
  Latency measured.
*********** Done executing iteration.
